import{b as V,F as je,c as ke,t as ae,d as le,h as et,P as tt,M as rt,i as De,j as Be,L as Ze,k as nt,l as Ye,n as x,o as $e,p as X,m as z,q as it,e as U,u as H,w as Q,a as j,r as st,x as ot}from"./index-16203d78.js";import{d as at}from"./contentDecorator-d459da96.js";import{f as lt}from"./feather-becb2378.js";const se="http://www.w3.org/2001/XMLSchema-instance";function y(o,e){return We().createElementNS(o,e)}function W(o,e){return ze(o,e,[]).join("")}function ze(o,e,t){if(o.nodeType==Node.CDATA_SECTION_NODE||o.nodeType==Node.TEXT_NODE)e?t.push(String(o.nodeValue).replace(/(\r\n|\r|\n)/g,"")):t.push(o.nodeValue);else{let r;for(r=o.firstChild;r;r=r.nextSibling)ze(r,e,t)}return t}function B(o){return"documentElement"in o}function ut(o,e,t){return o.getAttributeNS(e,t)||""}function Z(o){return new DOMParser().parseFromString(o,"application/xml")}function Ve(o,e){return function(t,r){const n=o.call(e!==void 0?e:this,t,r);if(n!==void 0){const i=r[r.length-1];V(i,n)}}}function g(o,e){return function(t,r){const n=o.call(e!==void 0?e:this,t,r);n!==void 0&&r[r.length-1].push(n)}}function d(o,e){return function(t,r){const n=o.call(e!==void 0?e:this,t,r);n!==void 0&&(r[r.length-1]=n)}}function O(o,e,t){return function(r,n){const i=o.call(t!==void 0?t:this,r,n);if(i!==void 0){const s=n[n.length-1],a=e!==void 0?e:r.localName;s[a]=i}}}function l(o,e){return function(t,r,n){o.call(e!==void 0?e:this,t,r,n),n[n.length-1].node.appendChild(t)}}function _(o,e){return function(t,r,n){const s=r[r.length-1].node;let a=o;a===void 0&&(a=n);const u=e!==void 0?e:s.namespaceURI;return y(u,a)}}const Xe=_();function G(o,e,t,r){let n;for(n=e.firstElementChild;n;n=n.nextElementSibling){const i=o[n.namespaceURI];if(i!==void 0){const s=i[n.localName];s!==void 0&&s.call(r,n,t)}}}function P(o,e,t,r,n){return r.push(o),G(e,t,r,n),r.pop()}function pt(o,e,t,r,n,i){const s=(n!==void 0?n:t).length;let a,u;for(let p=0;p<s;++p)a=t[p],a!==void 0&&(u=e.call(i!==void 0?i:this,a,r,n!==void 0?n[p]:void 0),u!==void 0&&o[u.namespaceURI][u.localName].call(i,u,a,r))}function L(o,e,t,r,n,i,s){return n.push(o),pt(e,t,r,n,i,s),n.pop()}let ne;function ct(){return ne===void 0&&typeof XMLSerializer<"u"&&(ne=new XMLSerializer),ne}let ie;function We(){return ie===void 0&&typeof document<"u"&&(ie=document.implementation.createDocument("","",null)),ie}class dt extends je{constructor(){super(),this.xmlSerializer_=ct()}getType(){return"xml"}readFeature(e,t){if(e)if(typeof e=="string"){const r=Z(e);return this.readFeatureFromDocument(r,t)}else return B(e)?this.readFeatureFromDocument(e,t):this.readFeatureFromNode(e,t);else return null}readFeatureFromDocument(e,t){const r=this.readFeaturesFromDocument(e,t);return r.length>0?r[0]:null}readFeatureFromNode(e,t){return null}readFeatures(e,t){if(e)if(typeof e=="string"){const r=Z(e);return this.readFeaturesFromDocument(r,t)}else return B(e)?this.readFeaturesFromDocument(e,t):this.readFeaturesFromNode(e,t);else return[]}readFeaturesFromDocument(e,t){const r=[];for(let n=e.firstChild;n;n=n.nextSibling)n.nodeType==Node.ELEMENT_NODE&&V(r,this.readFeaturesFromNode(n,t));return r}readFeaturesFromNode(e,t){return ke()}readGeometry(e,t){if(e)if(typeof e=="string"){const r=Z(e);return this.readGeometryFromDocument(r,t)}else return B(e)?this.readGeometryFromDocument(e,t):this.readGeometryFromNode(e,t);else return null}readGeometryFromDocument(e,t){return null}readGeometryFromNode(e,t){return null}readProjection(e){if(e)if(typeof e=="string"){const t=Z(e);return this.readProjectionFromDocument(t)}else return B(e)?this.readProjectionFromDocument(e):this.readProjectionFromNode(e);else return null}readProjectionFromDocument(e){return this.dataProjection}readProjectionFromNode(e){return this.dataProjection}writeFeature(e,t){const r=this.writeFeatureNode(e,t);return this.xmlSerializer_.serializeToString(r)}writeFeatureNode(e,t){return null}writeFeatures(e,t){const r=this.writeFeaturesNode(e,t);return this.xmlSerializer_.serializeToString(r)}writeFeaturesNode(e,t){return null}writeGeometry(e,t){const r=this.writeGeometryNode(e,t);return this.xmlSerializer_.serializeToString(r)}writeGeometryNode(e,t){return null}}const qe=dt,F="http://www.opengis.net/gml",mt=/^\s*$/;class C extends qe{constructor(e){super(),e=e||{},this.featureType=e.featureType,this.featureNS=e.featureNS,this.srsName=e.srsName,this.schemaLocation="",this.FEATURE_COLLECTION_PARSERS={},this.FEATURE_COLLECTION_PARSERS[this.namespace]={featureMember:g(this.readFeaturesInternal),featureMembers:d(this.readFeaturesInternal)},this.supportedMediaTypes=["application/gml+xml"]}readFeaturesInternal(e,t){const r=e.localName;let n=null;if(r=="FeatureCollection")n=P([],this.FEATURE_COLLECTION_PARSERS,e,t,this);else if(r=="featureMembers"||r=="featureMember"||r=="member"){const i=t[0];let s=i.featureType,a=i.featureNS;const u="p",p="p0";if(!s&&e.childNodes){s=[],a={};for(let m=0,N=e.childNodes.length;m<N;++m){const M=e.childNodes[m];if(M.nodeType===1){const I=M.nodeName.split(":").pop();if(!s.includes(I)){let b="",fe=0;const he=M.namespaceURI;for(const ye in a){if(a[ye]===he){b=ye;break}++fe}b||(b=u+fe,a[b]=he),s.push(b+":"+I)}}}r!="featureMember"&&(i.featureType=s,i.featureNS=a)}if(typeof a=="string"){const m=a;a={},a[p]=m}const h={},f=Array.isArray(s)?s:[s];for(const m in a){const N={};for(let M=0,I=f.length;M<I;++M)(f[M].includes(":")?f[M].split(":")[0]:p)===m&&(N[f[M].split(":").pop()]=r=="featureMembers"?g(this.readFeatureElement,this):d(this.readFeatureElement,this));h[a[m]]=N}r=="featureMember"||r=="member"?n=P(void 0,h,e,t):n=P([],h,e,t)}return n===null&&(n=[]),n}readGeometryOrExtent(e,t){const r=t[0];return r.srsName=e.firstElementChild.getAttribute("srsName"),r.srsDimension=e.firstElementChild.getAttribute("srsDimension"),P(null,this.GEOMETRY_PARSERS,e,t,this)}readExtentElement(e,t){const r=t[0],n=this.readGeometryOrExtent(e,t);return n?ae(n,r):void 0}readGeometryElement(e,t){const r=t[0],n=this.readGeometryOrExtent(e,t);return n?le(n,!1,r):void 0}readFeatureElementInternal(e,t,r){let n;const i={};for(let s=e.firstElementChild;s;s=s.nextElementSibling){let a;const u=s.localName;s.childNodes.length===0||s.childNodes.length===1&&(s.firstChild.nodeType===3||s.firstChild.nodeType===4)?(a=W(s,!1),mt.test(a)&&(a=void 0)):(r&&(a=u==="boundedBy"?this.readExtentElement(s,t):this.readGeometryElement(s,t)),a?u!=="boundedBy"&&(n=u):a=this.readFeatureElementInternal(s,t,!1));const p=s.attributes.length;if(p>0){a={_content_:a};for(let h=0;h<p;h++){const f=s.attributes[h].name;a[f]=s.attributes[h].value}}i[u]?(i[u]instanceof Array||(i[u]=[i[u]]),i[u].push(a)):i[u]=a}if(r){const s=new et(i);n&&s.setGeometryName(n);const a=e.getAttribute("fid")||ut(e,this.namespace,"id");return a&&s.setId(a),s}else return i}readFeatureElement(e,t){return this.readFeatureElementInternal(e,t,!0)}readPoint(e,t){const r=this.readFlatCoordinatesFromNode(e,t);if(r)return new tt(r,"XYZ")}readMultiPoint(e,t){const r=P([],this.MULTIPOINT_PARSERS,e,t,this);if(r)return new rt(r)}readMultiLineString(e,t){const r=P([],this.MULTILINESTRING_PARSERS,e,t,this);if(r)return new De(r)}readMultiPolygon(e,t){const r=P([],this.MULTIPOLYGON_PARSERS,e,t,this);if(r)return new Be(r)}pointMemberParser(e,t){G(this.POINTMEMBER_PARSERS,e,t,this)}lineStringMemberParser(e,t){G(this.LINESTRINGMEMBER_PARSERS,e,t,this)}polygonMemberParser(e,t){G(this.POLYGONMEMBER_PARSERS,e,t,this)}readLineString(e,t){const r=this.readFlatCoordinatesFromNode(e,t);if(r)return new Ze(r,"XYZ")}readFlatLinearRing(e,t){const r=P(null,this.GEOMETRY_FLAT_COORDINATES_PARSERS,e,t,this);if(r)return r}readLinearRing(e,t){const r=this.readFlatCoordinatesFromNode(e,t);if(r)return new nt(r,"XYZ")}readPolygon(e,t){const r=P([null],this.FLAT_LINEAR_RINGS_PARSERS,e,t,this);if(r&&r[0]){const n=r[0],i=[n.length];let s,a;for(s=1,a=r.length;s<a;++s)V(n,r[s]),i.push(n.length);return new Ye(n,"XYZ",i)}else return}readFlatCoordinatesFromNode(e,t){return P(null,this.GEOMETRY_FLAT_COORDINATES_PARSERS,e,t,this)}readGeometryFromNode(e,t){const r=this.readGeometryElement(e,[this.getReadOptions(e,t||{})]);return r||null}readFeaturesFromNode(e,t){const r={featureType:this.featureType,featureNS:this.featureNS};return r&&Object.assign(r,this.getReadOptions(e,t)),this.readFeaturesInternal(e,[r])||[]}readProjectionFromNode(e){return x(this.srsName?this.srsName:e.firstElementChild.getAttribute("srsName"))}}C.prototype.namespace=F;C.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{}};C.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{}};C.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{}};C.prototype.MULTIPOINT_PARSERS={"http://www.opengis.net/gml":{pointMember:g(C.prototype.pointMemberParser),pointMembers:g(C.prototype.pointMemberParser)}};C.prototype.MULTILINESTRING_PARSERS={"http://www.opengis.net/gml":{lineStringMember:g(C.prototype.lineStringMemberParser),lineStringMembers:g(C.prototype.lineStringMemberParser)}};C.prototype.MULTIPOLYGON_PARSERS={"http://www.opengis.net/gml":{polygonMember:g(C.prototype.polygonMemberParser),polygonMembers:g(C.prototype.polygonMemberParser)}};C.prototype.POINTMEMBER_PARSERS={"http://www.opengis.net/gml":{Point:g(C.prototype.readFlatCoordinatesFromNode)}};C.prototype.LINESTRINGMEMBER_PARSERS={"http://www.opengis.net/gml":{LineString:g(C.prototype.readLineString)}};C.prototype.POLYGONMEMBER_PARSERS={"http://www.opengis.net/gml":{Polygon:g(C.prototype.readPolygon)}};C.prototype.RING_PARSERS={"http://www.opengis.net/gml":{LinearRing:d(C.prototype.readFlatLinearRing)}};const w=C;function D(o){const e=W(o,!1);return Y(e)}function Y(o){const e=/^\s*(\d+)\s*$/.exec(o);if(e)return parseInt(e[1],10)}function A(o,e){o.appendChild(We().createTextNode(e))}const gt=F+" http://schemas.opengis.net/gml/2.1.2/feature.xsd",ft={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"};class R extends w{constructor(e){e=e||{},super(e),this.FEATURE_COLLECTION_PARSERS[F].featureMember=g(this.readFeaturesInternal),this.schemaLocation=e.schemaLocation?e.schemaLocation:gt}readFlatCoordinates(e,t){const r=W(e,!1).replace(/^\s*|\s*$/g,""),i=t[0].srsName;let s="enu";if(i){const p=x(i);p&&(s=p.getAxisOrientation())}const a=r.trim().split(/\s+/),u=[];for(let p=0,h=a.length;p<h;p++){const f=a[p].split(/,+/),m=parseFloat(f[0]),N=parseFloat(f[1]),M=f.length===3?parseFloat(f[2]):0;s.substr(0,2)==="en"?u.push(m,N,M):u.push(N,m,M)}return u}readBox(e,t){const r=P([null],this.BOX_PARSERS_,e,t,this);return $e(r[1][0],r[1][1],r[1][3],r[1][4])}innerBoundaryIsParser(e,t){const r=P(void 0,this.RING_PARSERS,e,t,this);r&&t[t.length-1].push(r)}outerBoundaryIsParser(e,t){const r=P(void 0,this.RING_PARSERS,e,t,this);if(r){const n=t[t.length-1];n[0]=r}}GEOMETRY_NODE_FACTORY_(e,t,r){const n=t[t.length-1],i=n.multiSurface,s=n.surface,a=n.multiCurve;return Array.isArray(e)?r="Envelope":(r=e.getType(),r==="MultiPolygon"&&i===!0?r="MultiSurface":r==="Polygon"&&s===!0?r="Surface":r==="MultiLineString"&&a===!0&&(r="MultiCurve")),y("http://www.opengis.net/gml",r)}writeFeatureElement(e,t,r){const n=t.getId();n&&e.setAttribute("fid",n);const i=r[r.length-1],s=i.featureNS,a=t.getGeometryName();i.serializers||(i.serializers={},i.serializers[s]={});const u=[],p=[];if(t.hasProperties()){const f=t.getProperties();for(const m in f){const N=f[m];N!==null&&(u.push(m),p.push(N),m==a||typeof N.getSimplifiedGeometry=="function"?m in i.serializers[s]||(i.serializers[s][m]=l(this.writeGeometryElement,this)):m in i.serializers[s]||(i.serializers[s][m]=l(A)))}}const h=Object.assign({},i);h.node=e,L(h,i.serializers,_(void 0,s),p,r,u)}writeCurveOrLineString(e,t,r){const i=r[r.length-1].srsName;if(e.nodeName!=="LineStringSegment"&&i&&e.setAttribute("srsName",i),e.nodeName==="LineString"||e.nodeName==="LineStringSegment"){const s=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(s),this.writeCoordinates_(s,t,r)}else if(e.nodeName==="Curve"){const s=y(e.namespaceURI,"segments");e.appendChild(s),this.writeCurveSegments_(s,t,r)}}writeLineStringOrCurveMember(e,t,r){const n=this.GEOMETRY_NODE_FACTORY_(t,r);n&&(e.appendChild(n),this.writeCurveOrLineString(n,t,r))}writeMultiCurveOrLineString(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName,a=n.curve;s&&e.setAttribute("srsName",s);const u=t.getLineStrings();L({node:e,hasZ:i,srsName:s,curve:a},this.LINESTRINGORCURVEMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,u,r,void 0,this)}writeGeometryElement(e,t,r){const n=r[r.length-1],i=Object.assign({},n);i.node=e;let s;Array.isArray(t)?s=ae(t,n):s=le(t,!0,n),L(i,this.GEOMETRY_SERIALIZERS,this.GEOMETRY_NODE_FACTORY_,[s],r,void 0,this)}createCoordinatesNode_(e){const t=y(e,"coordinates");return t.setAttribute("decimal","."),t.setAttribute("cs",","),t.setAttribute("ts"," "),t}writeCoordinates_(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName,a=t.getCoordinates(),u=a.length,p=new Array(u);for(let h=0;h<u;++h){const f=a[h];p[h]=this.getCoords_(f,s,i)}A(e,p.join(" "))}writeCurveSegments_(e,t,r){const n=y(e.namespaceURI,"LineStringSegment");e.appendChild(n),this.writeCurveOrLineString(n,t,r)}writeSurfaceOrPolygon(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName;if(e.nodeName!=="PolygonPatch"&&s&&e.setAttribute("srsName",s),e.nodeName==="Polygon"||e.nodeName==="PolygonPatch"){const a=t.getLinearRings();L({node:e,hasZ:i,srsName:s},this.RING_SERIALIZERS,this.RING_NODE_FACTORY_,a,r,void 0,this)}else if(e.nodeName==="Surface"){const a=y(e.namespaceURI,"patches");e.appendChild(a),this.writeSurfacePatches_(a,t,r)}}RING_NODE_FACTORY_(e,t,r){const n=t[t.length-1],i=n.node,s=n.exteriorWritten;return s===void 0&&(n.exteriorWritten=!0),y(i.namespaceURI,s!==void 0?"innerBoundaryIs":"outerBoundaryIs")}writeSurfacePatches_(e,t,r){const n=y(e.namespaceURI,"PolygonPatch");e.appendChild(n),this.writeSurfaceOrPolygon(n,t,r)}writeRing(e,t,r){const n=y(e.namespaceURI,"LinearRing");e.appendChild(n),this.writeLinearRing(n,t,r)}getCoords_(e,t,r){let n="enu";t&&(n=x(t).getAxisOrientation());let i=n.substr(0,2)==="en"?e[0]+","+e[1]:e[1]+","+e[0];if(r){const s=e[2]||0;i+=","+s}return i}writePoint(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName;s&&e.setAttribute("srsName",s);const a=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(a);const u=t.getCoordinates(),p=this.getCoords_(u,s,i);A(a,p)}writeMultiPoint(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName;s&&e.setAttribute("srsName",s);const a=t.getPoints();L({node:e,hasZ:i,srsName:s},this.POINTMEMBER_SERIALIZERS,_("pointMember"),a,r,void 0,this)}writePointMember(e,t,r){const n=y(e.namespaceURI,"Point");e.appendChild(n),this.writePoint(n,t,r)}writeLinearRing(e,t,r){const i=r[r.length-1].srsName;i&&e.setAttribute("srsName",i);const s=this.createCoordinatesNode_(e.namespaceURI);e.appendChild(s),this.writeCoordinates_(s,t,r)}writeMultiSurfaceOrPolygon(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName,a=n.surface;s&&e.setAttribute("srsName",s);const u=t.getPolygons();L({node:e,hasZ:i,srsName:s,surface:a},this.SURFACEORPOLYGONMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,u,r,void 0,this)}writeSurfaceOrPolygonMember(e,t,r){const n=this.GEOMETRY_NODE_FACTORY_(t,r);n&&(e.appendChild(n),this.writeSurfaceOrPolygon(n,t,r))}writeEnvelope(e,t,r){const i=r[r.length-1].srsName;i&&e.setAttribute("srsName",i);const s=["lowerCorner","upperCorner"],a=[t[0]+" "+t[1],t[2]+" "+t[3]];L({node:e},this.ENVELOPE_SERIALIZERS,Xe,a,r,s,this)}MULTIGEOMETRY_MEMBER_NODE_FACTORY_(e,t,r){const n=t[t.length-1].node;return y("http://www.opengis.net/gml",ft[n.nodeName])}}R.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{coordinates:d(R.prototype.readFlatCoordinates)}};R.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{innerBoundaryIs:R.prototype.innerBoundaryIsParser,outerBoundaryIs:R.prototype.outerBoundaryIsParser}};R.prototype.BOX_PARSERS_={"http://www.opengis.net/gml":{coordinates:g(R.prototype.readFlatCoordinates)}};R.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:d(w.prototype.readPoint),MultiPoint:d(w.prototype.readMultiPoint),LineString:d(w.prototype.readLineString),MultiLineString:d(w.prototype.readMultiLineString),LinearRing:d(w.prototype.readLinearRing),Polygon:d(w.prototype.readPolygon),MultiPolygon:d(w.prototype.readMultiPolygon),Box:d(R.prototype.readBox)}};R.prototype.GEOMETRY_SERIALIZERS={"http://www.opengis.net/gml":{Curve:l(R.prototype.writeCurveOrLineString),MultiCurve:l(R.prototype.writeMultiCurveOrLineString),Point:l(R.prototype.writePoint),MultiPoint:l(R.prototype.writeMultiPoint),LineString:l(R.prototype.writeCurveOrLineString),MultiLineString:l(R.prototype.writeMultiCurveOrLineString),LinearRing:l(R.prototype.writeLinearRing),Polygon:l(R.prototype.writeSurfaceOrPolygon),MultiPolygon:l(R.prototype.writeMultiSurfaceOrPolygon),Surface:l(R.prototype.writeSurfaceOrPolygon),MultiSurface:l(R.prototype.writeMultiSurfaceOrPolygon),Envelope:l(R.prototype.writeEnvelope)}};R.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{lineStringMember:l(R.prototype.writeLineStringOrCurveMember),curveMember:l(R.prototype.writeLineStringOrCurveMember)}};R.prototype.RING_SERIALIZERS={"http://www.opengis.net/gml":{outerBoundaryIs:l(R.prototype.writeRing),innerBoundaryIs:l(R.prototype.writeRing)}};R.prototype.POINTMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{pointMember:l(R.prototype.writePointMember)}};R.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{surfaceMember:l(R.prototype.writeSurfaceOrPolygonMember),polygonMember:l(R.prototype.writeSurfaceOrPolygonMember)}};R.prototype.ENVELOPE_SERIALIZERS={"http://www.opengis.net/gml":{lowerCorner:l(A),upperCorner:l(A)}};const q=R,ht=F+" http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/1.0.0/gmlsf.xsd",yt={MultiLineString:"lineStringMember",MultiCurve:"curveMember",MultiPolygon:"polygonMember",MultiSurface:"surfaceMember"};class c extends w{constructor(e){e=e||{},super(e),this.surface_=e.surface!==void 0?e.surface:!1,this.curve_=e.curve!==void 0?e.curve:!1,this.multiCurve_=e.multiCurve!==void 0?e.multiCurve:!0,this.multiSurface_=e.multiSurface!==void 0?e.multiSurface:!0,this.schemaLocation=e.schemaLocation?e.schemaLocation:ht,this.hasZ=e.hasZ!==void 0?e.hasZ:!1}readMultiCurve(e,t){const r=P([],this.MULTICURVE_PARSERS,e,t,this);if(r)return new De(r)}readFlatCurveRing(e,t){const r=P([],this.MULTICURVE_PARSERS,e,t,this),n=[];for(let i=0,s=r.length;i<s;++i)V(n,r[i].getFlatCoordinates());return n}readMultiSurface(e,t){const r=P([],this.MULTISURFACE_PARSERS,e,t,this);if(r)return new Be(r)}curveMemberParser(e,t){G(this.CURVEMEMBER_PARSERS,e,t,this)}surfaceMemberParser(e,t){G(this.SURFACEMEMBER_PARSERS,e,t,this)}readPatch(e,t){return P([null],this.PATCHES_PARSERS,e,t,this)}readSegment(e,t){return P([],this.SEGMENTS_PARSERS,e,t,this)}readPolygonPatch(e,t){return P([null],this.FLAT_LINEAR_RINGS_PARSERS,e,t,this)}readLineStringSegment(e,t){return P([null],this.GEOMETRY_FLAT_COORDINATES_PARSERS,e,t,this)}interiorParser(e,t){const r=P(void 0,this.RING_PARSERS,e,t,this);r&&t[t.length-1].push(r)}exteriorParser(e,t){const r=P(void 0,this.RING_PARSERS,e,t,this);if(r){const n=t[t.length-1];n[0]=r}}readSurface(e,t){const r=P([null],this.SURFACE_PARSERS,e,t,this);if(r&&r[0]){const n=r[0],i=[n.length];let s,a;for(s=1,a=r.length;s<a;++s)V(n,r[s]),i.push(n.length);return new Ye(n,"XYZ",i)}else return}readCurve(e,t){const r=P([null],this.CURVE_PARSERS,e,t,this);if(r)return new Ze(r,"XYZ")}readEnvelope(e,t){const r=P([null],this.ENVELOPE_PARSERS,e,t,this);return $e(r[1][0],r[1][1],r[2][0],r[2][1])}readFlatPos(e,t){let r=W(e,!1);const n=/^\s*([+\-]?\d*\.?\d+(?:[eE][+\-]?\d+)?)\s*/,i=[];let s;for(;s=n.exec(r);)i.push(parseFloat(s[1])),r=r.substr(s[0].length);if(r!=="")return;const u=t[0].srsName;let p="enu";if(u&&(p=x(u).getAxisOrientation()),p==="neu"){let f,m;for(f=0,m=i.length;f<m;f+=3){const N=i[f],M=i[f+1];i[f]=M,i[f+1]=N}}const h=i.length;if(h==2&&i.push(0),h!==0)return i}readFlatPosList(e,t){const r=W(e,!1).replace(/^\s*|\s*$/g,""),n=t[0],i=n.srsName,s=n.srsDimension;let a="enu";i&&(a=x(i).getAxisOrientation());const u=r.split(/\s+/);let p=2;e.getAttribute("srsDimension")?p=Y(e.getAttribute("srsDimension")):e.getAttribute("dimension")?p=Y(e.getAttribute("dimension")):e.parentNode.getAttribute("srsDimension")?p=Y(e.parentNode.getAttribute("srsDimension")):s&&(p=Y(s));let h,f,m;const N=[];for(let M=0,I=u.length;M<I;M+=p)h=parseFloat(u[M]),f=parseFloat(u[M+1]),m=p===3?parseFloat(u[M+2]):0,a.substr(0,2)==="en"?N.push(h,f,m):N.push(f,h,m);return N}writePos_(e,t,r){const n=r[r.length-1],i=n.hasZ,s=i?"3":"2";e.setAttribute("srsDimension",s);const a=n.srsName;let u="enu";a&&(u=x(a).getAxisOrientation());const p=t.getCoordinates();let h;if(u.substr(0,2)==="en"?h=p[0]+" "+p[1]:h=p[1]+" "+p[0],i){const f=p[2]||0;h+=" "+f}A(e,h)}getCoords_(e,t,r){let n="enu";t&&(n=x(t).getAxisOrientation());let i=n.substr(0,2)==="en"?e[0]+" "+e[1]:e[1]+" "+e[0];if(r){const s=e[2]||0;i+=" "+s}return i}writePosList_(e,t,r){const n=r[r.length-1],i=n.hasZ,s=i?"3":"2";e.setAttribute("srsDimension",s);const a=n.srsName,u=t.getCoordinates(),p=u.length,h=new Array(p);let f;for(let m=0;m<p;++m)f=u[m],h[m]=this.getCoords_(f,a,i);A(e,h.join(" "))}writePoint(e,t,r){const i=r[r.length-1].srsName;i&&e.setAttribute("srsName",i);const s=y(e.namespaceURI,"pos");e.appendChild(s),this.writePos_(s,t,r)}writeEnvelope(e,t,r){const i=r[r.length-1].srsName;i&&e.setAttribute("srsName",i);const s=["lowerCorner","upperCorner"],a=[t[0]+" "+t[1],t[2]+" "+t[3]];L({node:e},this.ENVELOPE_SERIALIZERS,Xe,a,r,s,this)}writeLinearRing(e,t,r){const i=r[r.length-1].srsName;i&&e.setAttribute("srsName",i);const s=y(e.namespaceURI,"posList");e.appendChild(s),this.writePosList_(s,t,r)}RING_NODE_FACTORY_(e,t,r){const n=t[t.length-1],i=n.node,s=n.exteriorWritten;return s===void 0&&(n.exteriorWritten=!0),y(i.namespaceURI,s!==void 0?"interior":"exterior")}writeSurfaceOrPolygon(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName;if(e.nodeName!=="PolygonPatch"&&s&&e.setAttribute("srsName",s),e.nodeName==="Polygon"||e.nodeName==="PolygonPatch"){const a=t.getLinearRings();L({node:e,hasZ:i,srsName:s},this.RING_SERIALIZERS,this.RING_NODE_FACTORY_,a,r,void 0,this)}else if(e.nodeName==="Surface"){const a=y(e.namespaceURI,"patches");e.appendChild(a),this.writeSurfacePatches_(a,t,r)}}writeCurveOrLineString(e,t,r){const i=r[r.length-1].srsName;if(e.nodeName!=="LineStringSegment"&&i&&e.setAttribute("srsName",i),e.nodeName==="LineString"||e.nodeName==="LineStringSegment"){const s=y(e.namespaceURI,"posList");e.appendChild(s),this.writePosList_(s,t,r)}else if(e.nodeName==="Curve"){const s=y(e.namespaceURI,"segments");e.appendChild(s),this.writeCurveSegments_(s,t,r)}}writeMultiSurfaceOrPolygon(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName,a=n.surface;s&&e.setAttribute("srsName",s);const u=t.getPolygons();L({node:e,hasZ:i,srsName:s,surface:a},this.SURFACEORPOLYGONMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,u,r,void 0,this)}writeMultiPoint(e,t,r){const n=r[r.length-1],i=n.srsName,s=n.hasZ;i&&e.setAttribute("srsName",i);const a=t.getPoints();L({node:e,hasZ:s,srsName:i},this.POINTMEMBER_SERIALIZERS,_("pointMember"),a,r,void 0,this)}writeMultiCurveOrLineString(e,t,r){const n=r[r.length-1],i=n.hasZ,s=n.srsName,a=n.curve;s&&e.setAttribute("srsName",s);const u=t.getLineStrings();L({node:e,hasZ:i,srsName:s,curve:a},this.LINESTRINGORCURVEMEMBER_SERIALIZERS,this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_,u,r,void 0,this)}writeRing(e,t,r){const n=y(e.namespaceURI,"LinearRing");e.appendChild(n),this.writeLinearRing(n,t,r)}writeSurfaceOrPolygonMember(e,t,r){const n=this.GEOMETRY_NODE_FACTORY_(t,r);n&&(e.appendChild(n),this.writeSurfaceOrPolygon(n,t,r))}writePointMember(e,t,r){const n=y(e.namespaceURI,"Point");e.appendChild(n),this.writePoint(n,t,r)}writeLineStringOrCurveMember(e,t,r){const n=this.GEOMETRY_NODE_FACTORY_(t,r);n&&(e.appendChild(n),this.writeCurveOrLineString(n,t,r))}writeSurfacePatches_(e,t,r){const n=y(e.namespaceURI,"PolygonPatch");e.appendChild(n),this.writeSurfaceOrPolygon(n,t,r)}writeCurveSegments_(e,t,r){const n=y(e.namespaceURI,"LineStringSegment");e.appendChild(n),this.writeCurveOrLineString(n,t,r)}writeGeometryElement(e,t,r){const n=r[r.length-1],i=Object.assign({},n);i.node=e;let s;Array.isArray(t)?s=ae(t,n):s=le(t,!0,n),L(i,this.GEOMETRY_SERIALIZERS,this.GEOMETRY_NODE_FACTORY_,[s],r,void 0,this)}writeFeatureElement(e,t,r){const n=t.getId();n&&e.setAttribute("fid",n);const i=r[r.length-1],s=i.featureNS,a=t.getGeometryName();i.serializers||(i.serializers={},i.serializers[s]={});const u=[],p=[];if(t.hasProperties()){const f=t.getProperties();for(const m in f){const N=f[m];N!==null&&(u.push(m),p.push(N),m==a||typeof N.getSimplifiedGeometry=="function"?m in i.serializers[s]||(i.serializers[s][m]=l(this.writeGeometryElement,this)):m in i.serializers[s]||(i.serializers[s][m]=l(A)))}}const h=Object.assign({},i);h.node=e,L(h,i.serializers,_(void 0,s),p,r,u)}writeFeatureMembers_(e,t,r){const n=r[r.length-1],i=n.featureType,s=n.featureNS,a={};a[s]={},a[s][i]=l(this.writeFeatureElement,this);const u=Object.assign({},n);u.node=e,L(u,a,_(i,s),t,r)}MULTIGEOMETRY_MEMBER_NODE_FACTORY_(e,t,r){const n=t[t.length-1].node;return y(this.namespace,yt[n.nodeName])}GEOMETRY_NODE_FACTORY_(e,t,r){const n=t[t.length-1],i=n.multiSurface,s=n.surface,a=n.curve,u=n.multiCurve;return Array.isArray(e)?r="Envelope":(r=e.getType(),r==="MultiPolygon"&&i===!0?r="MultiSurface":r==="Polygon"&&s===!0?r="Surface":r==="LineString"&&a===!0?r="Curve":r==="MultiLineString"&&u===!0&&(r="MultiCurve")),y(this.namespace,r)}writeGeometryNode(e,t){t=this.adaptOptions(t);const r=y(this.namespace,"geom"),n={node:r,hasZ:this.hasZ,srsName:this.srsName,curve:this.curve_,surface:this.surface_,multiSurface:this.multiSurface_,multiCurve:this.multiCurve_};return t&&Object.assign(n,t),this.writeGeometryElement(r,e,[n]),r}writeFeaturesNode(e,t){t=this.adaptOptions(t);const r=y(this.namespace,"featureMembers");r.setAttributeNS(se,"xsi:schemaLocation",this.schemaLocation);const n={srsName:this.srsName,hasZ:this.hasZ,curve:this.curve_,surface:this.surface_,multiSurface:this.multiSurface_,multiCurve:this.multiCurve_,featureNS:this.featureNS,featureType:this.featureType};return t&&Object.assign(n,t),this.writeFeatureMembers_(r,e,[n]),r}}c.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml":{pos:d(c.prototype.readFlatPos),posList:d(c.prototype.readFlatPosList),coordinates:d(q.prototype.readFlatCoordinates)}};c.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml":{interior:c.prototype.interiorParser,exterior:c.prototype.exteriorParser}};c.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml":{Point:d(w.prototype.readPoint),MultiPoint:d(w.prototype.readMultiPoint),LineString:d(w.prototype.readLineString),MultiLineString:d(w.prototype.readMultiLineString),LinearRing:d(w.prototype.readLinearRing),Polygon:d(w.prototype.readPolygon),MultiPolygon:d(w.prototype.readMultiPolygon),Surface:d(c.prototype.readSurface),MultiSurface:d(c.prototype.readMultiSurface),Curve:d(c.prototype.readCurve),MultiCurve:d(c.prototype.readMultiCurve),Envelope:d(c.prototype.readEnvelope)}};c.prototype.MULTICURVE_PARSERS={"http://www.opengis.net/gml":{curveMember:g(c.prototype.curveMemberParser),curveMembers:g(c.prototype.curveMemberParser)}};c.prototype.MULTISURFACE_PARSERS={"http://www.opengis.net/gml":{surfaceMember:g(c.prototype.surfaceMemberParser),surfaceMembers:g(c.prototype.surfaceMemberParser)}};c.prototype.CURVEMEMBER_PARSERS={"http://www.opengis.net/gml":{LineString:g(w.prototype.readLineString),Curve:g(c.prototype.readCurve)}};c.prototype.SURFACEMEMBER_PARSERS={"http://www.opengis.net/gml":{Polygon:g(w.prototype.readPolygon),Surface:g(c.prototype.readSurface)}};c.prototype.SURFACE_PARSERS={"http://www.opengis.net/gml":{patches:d(c.prototype.readPatch)}};c.prototype.CURVE_PARSERS={"http://www.opengis.net/gml":{segments:d(c.prototype.readSegment)}};c.prototype.ENVELOPE_PARSERS={"http://www.opengis.net/gml":{lowerCorner:g(c.prototype.readFlatPosList),upperCorner:g(c.prototype.readFlatPosList)}};c.prototype.PATCHES_PARSERS={"http://www.opengis.net/gml":{PolygonPatch:d(c.prototype.readPolygonPatch)}};c.prototype.SEGMENTS_PARSERS={"http://www.opengis.net/gml":{LineStringSegment:Ve(c.prototype.readLineStringSegment)}};w.prototype.RING_PARSERS={"http://www.opengis.net/gml":{LinearRing:d(w.prototype.readFlatLinearRing),Ring:d(c.prototype.readFlatCurveRing)}};c.prototype.writeFeatures;c.prototype.RING_SERIALIZERS={"http://www.opengis.net/gml":{exterior:l(c.prototype.writeRing),interior:l(c.prototype.writeRing)}};c.prototype.ENVELOPE_SERIALIZERS={"http://www.opengis.net/gml":{lowerCorner:l(A),upperCorner:l(A)}};c.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{surfaceMember:l(c.prototype.writeSurfaceOrPolygonMember),polygonMember:l(c.prototype.writeSurfaceOrPolygonMember)}};c.prototype.POINTMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{pointMember:l(c.prototype.writePointMember)}};c.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS={"http://www.opengis.net/gml":{lineStringMember:l(c.prototype.writeLineStringOrCurveMember),curveMember:l(c.prototype.writeLineStringOrCurveMember)}};c.prototype.GEOMETRY_SERIALIZERS={"http://www.opengis.net/gml":{Curve:l(c.prototype.writeCurveOrLineString),MultiCurve:l(c.prototype.writeMultiCurveOrLineString),Point:l(c.prototype.writePoint),MultiPoint:l(c.prototype.writeMultiPoint),LineString:l(c.prototype.writeCurveOrLineString),MultiLineString:l(c.prototype.writeMultiCurveOrLineString),LinearRing:l(c.prototype.writeLinearRing),Polygon:l(c.prototype.writeSurfaceOrPolygon),MultiPolygon:l(c.prototype.writeMultiSurfaceOrPolygon),Surface:l(c.prototype.writeSurfaceOrPolygon),MultiSurface:l(c.prototype.writeMultiSurfaceOrPolygon),Envelope:l(c.prototype.writeEnvelope)}};const E=c;class S extends E{constructor(e){e=e||{},super(e),this.schemaLocation=e.schemaLocation?e.schemaLocation:this.namespace+" http://schemas.opengis.net/gml/3.2.1/gml.xsd"}}S.prototype.namespace="http://www.opengis.net/gml/3.2";S.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS={"http://www.opengis.net/gml/3.2":{pos:d(E.prototype.readFlatPos),posList:d(E.prototype.readFlatPosList),coordinates:d(q.prototype.readFlatCoordinates)}};S.prototype.FLAT_LINEAR_RINGS_PARSERS={"http://www.opengis.net/gml/3.2":{interior:E.prototype.interiorParser,exterior:E.prototype.exteriorParser}};S.prototype.GEOMETRY_PARSERS={"http://www.opengis.net/gml/3.2":{Point:d(w.prototype.readPoint),MultiPoint:d(w.prototype.readMultiPoint),LineString:d(w.prototype.readLineString),MultiLineString:d(w.prototype.readMultiLineString),LinearRing:d(w.prototype.readLinearRing),Polygon:d(w.prototype.readPolygon),MultiPolygon:d(w.prototype.readMultiPolygon),Surface:d(S.prototype.readSurface),MultiSurface:d(E.prototype.readMultiSurface),Curve:d(S.prototype.readCurve),MultiCurve:d(E.prototype.readMultiCurve),Envelope:d(S.prototype.readEnvelope)}};S.prototype.MULTICURVE_PARSERS={"http://www.opengis.net/gml/3.2":{curveMember:g(E.prototype.curveMemberParser),curveMembers:g(E.prototype.curveMemberParser)}};S.prototype.MULTISURFACE_PARSERS={"http://www.opengis.net/gml/3.2":{surfaceMember:g(E.prototype.surfaceMemberParser),surfaceMembers:g(E.prototype.surfaceMemberParser)}};S.prototype.CURVEMEMBER_PARSERS={"http://www.opengis.net/gml/3.2":{LineString:g(w.prototype.readLineString),Curve:g(E.prototype.readCurve)}};S.prototype.SURFACEMEMBER_PARSERS={"http://www.opengis.net/gml/3.2":{Polygon:g(w.prototype.readPolygon),Surface:g(E.prototype.readSurface)}};S.prototype.SURFACE_PARSERS={"http://www.opengis.net/gml/3.2":{patches:d(E.prototype.readPatch)}};S.prototype.CURVE_PARSERS={"http://www.opengis.net/gml/3.2":{segments:d(E.prototype.readSegment)}};S.prototype.ENVELOPE_PARSERS={"http://www.opengis.net/gml/3.2":{lowerCorner:g(E.prototype.readFlatPosList),upperCorner:g(E.prototype.readFlatPosList)}};S.prototype.PATCHES_PARSERS={"http://www.opengis.net/gml/3.2":{PolygonPatch:d(E.prototype.readPolygonPatch)}};S.prototype.SEGMENTS_PARSERS={"http://www.opengis.net/gml/3.2":{LineStringSegment:Ve(E.prototype.readLineStringSegment)}};S.prototype.MULTIPOINT_PARSERS={"http://www.opengis.net/gml/3.2":{pointMember:g(w.prototype.pointMemberParser),pointMembers:g(w.prototype.pointMemberParser)}};S.prototype.MULTILINESTRING_PARSERS={"http://www.opengis.net/gml/3.2":{lineStringMember:g(w.prototype.lineStringMemberParser),lineStringMembers:g(w.prototype.lineStringMemberParser)}};S.prototype.MULTIPOLYGON_PARSERS={"http://www.opengis.net/gml/3.2":{polygonMember:g(w.prototype.polygonMemberParser),polygonMembers:g(w.prototype.polygonMemberParser)}};S.prototype.POINTMEMBER_PARSERS={"http://www.opengis.net/gml/3.2":{Point:g(w.prototype.readFlatCoordinatesFromNode)}};S.prototype.LINESTRINGMEMBER_PARSERS={"http://www.opengis.net/gml/3.2":{LineString:g(w.prototype.readLineString)}};S.prototype.POLYGONMEMBER_PARSERS={"http://www.opengis.net/gml/3.2":{Polygon:g(w.prototype.readPolygon)}};S.prototype.RING_PARSERS={"http://www.opengis.net/gml/3.2":{LinearRing:d(w.prototype.readFlatLinearRing),Ring:d(S.prototype.readFlatCurveRing)}};S.prototype.RING_SERIALIZERS={"http://www.opengis.net/gml/3.2":{exterior:l(E.prototype.writeRing),interior:l(E.prototype.writeRing)}};S.prototype.ENVELOPE_SERIALIZERS={"http://www.opengis.net/gml/3.2":{lowerCorner:l(A),upperCorner:l(A)}};S.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS={"http://www.opengis.net/gml/3.2":{surfaceMember:l(E.prototype.writeSurfaceOrPolygonMember),polygonMember:l(E.prototype.writeSurfaceOrPolygonMember)}};S.prototype.POINTMEMBER_SERIALIZERS={"http://www.opengis.net/gml/3.2":{pointMember:l(E.prototype.writePointMember)}};S.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS={"http://www.opengis.net/gml/3.2":{lineStringMember:l(E.prototype.writeLineStringOrCurveMember),curveMember:l(E.prototype.writeLineStringOrCurveMember)}};S.prototype.GEOMETRY_SERIALIZERS={"http://www.opengis.net/gml/3.2":{Curve:l(E.prototype.writeCurveOrLineString),MultiCurve:l(E.prototype.writeMultiCurveOrLineString),Point:l(S.prototype.writePoint),MultiPoint:l(E.prototype.writeMultiPoint),LineString:l(E.prototype.writeCurveOrLineString),MultiLineString:l(E.prototype.writeMultiCurveOrLineString),LinearRing:l(E.prototype.writeLinearRing),Polygon:l(E.prototype.writeSurfaceOrPolygon),MultiPolygon:l(E.prototype.writeMultiSurfaceOrPolygon),Surface:l(E.prototype.writeSurfaceOrPolygon),MultiSurface:l(E.prototype.writeMultiSurfaceOrPolygon),Envelope:l(E.prototype.writeEnvelope)}};const ue=S;class wt{constructor(e){this.tagName_=e}getTagName(){return this.tagName_}}const He=wt;class Et extends He{constructor(e,t){super(e),this.conditions=t,X(this.conditions.length>=2,57)}}const Rt=Et;class St extends Rt{constructor(e){super("And",Array.prototype.slice.call(arguments))}}const Pt=St;class Nt extends He{constructor(e,t,r){if(super("BBOX"),this.geometryName=e,this.extent=t,t.length!==4)throw new Error("Expected an extent with four values ([minX, minY, maxX, maxY])");this.srsName=r}}const Mt=Nt;function Lt(o){const e=[null].concat(Array.prototype.slice.call(arguments));return new(Function.prototype.bind.apply(Pt,e))}function Ct(o,e,t){return new Mt(o,e,t)}const we={"http://www.opengis.net/gml":{boundedBy:O(w.prototype.readExtentElement,"bounds")},"http://www.opengis.net/wfs/2.0":{member:g(w.prototype.readFeaturesInternal)}},At={"http://www.opengis.net/wfs":{totalInserted:O(D),totalUpdated:O(D),totalDeleted:O(D)},"http://www.opengis.net/wfs/2.0":{totalInserted:O(D),totalUpdated:O(D),totalDeleted:O(D)}},_t={"http://www.opengis.net/wfs":{TransactionSummary:O(Re,"transactionSummary"),InsertResults:O(Pe,"insertIds")},"http://www.opengis.net/wfs/2.0":{TransactionSummary:O(Re,"transactionSummary"),InsertResults:O(Pe,"insertIds")}},Tt={"http://www.opengis.net/wfs":{PropertyName:l(A)},"http://www.opengis.net/wfs/2.0":{PropertyName:l(A)}},Qe={"http://www.opengis.net/wfs":{Insert:l(Ne),Update:l(Le),Delete:l(Me),Property:l(Ce),Native:l(Ae)},"http://www.opengis.net/wfs/2.0":{Insert:l(Ne),Update:l(Le),Delete:l(Me),Property:l(Ce),Native:l(Ae)}},Je="feature",pe="http://www.w3.org/2000/xmlns/",ce={"2.0.0":"http://www.opengis.net/ogc/1.1","1.1.0":"http://www.opengis.net/ogc","1.0.0":"http://www.opengis.net/ogc"},oe={"2.0.0":"http://www.opengis.net/wfs/2.0","1.1.0":"http://www.opengis.net/wfs","1.0.0":"http://www.opengis.net/wfs"},de={"2.0.0":"http://www.opengis.net/fes/2.0","1.1.0":"http://www.opengis.net/fes","1.0.0":"http://www.opengis.net/fes"},Ee={"2.0.0":"http://www.opengis.net/wfs/2.0 http://schemas.opengis.net/wfs/2.0/wfs.xsd","1.1.0":"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd","1.0.0":"http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd"},me={"2.0.0":ue,"1.1.0":E,"1.0.0":q},It="1.1.0";class Ot extends qe{constructor(e){super(),e=e||{},this.version_=e.version?e.version:It,this.featureType_=e.featureType,this.featureNS_=e.featureNS,this.gmlFormat_=e.gmlFormat?e.gmlFormat:new me[this.version_],this.schemaLocation_=e.schemaLocation?e.schemaLocation:Ee[this.version_]}getFeatureType(){return this.featureType_}setFeatureType(e){this.featureType_=e}readFeaturesFromNode(e,t){const r={node:e};Object.assign(r,{featureType:this.featureType_,featureNS:this.featureNS_}),Object.assign(r,this.getReadOptions(e,t||{}));const n=[r];let i;this.version_==="2.0.0"?i=we:i=this.gmlFormat_.FEATURE_COLLECTION_PARSERS;let s=P([],i,e,n,this.gmlFormat_);return s||(s=[]),s}readTransactionResponse(e){if(e)if(typeof e=="string"){const t=Z(e);return this.readTransactionResponseFromDocument(t)}else return B(e)?this.readTransactionResponseFromDocument(e):this.readTransactionResponseFromNode(e);else return}readFeatureCollectionMetadata(e){if(e)if(typeof e=="string"){const t=Z(e);return this.readFeatureCollectionMetadataFromDocument(t)}else return B(e)?this.readFeatureCollectionMetadataFromDocument(e):this.readFeatureCollectionMetadataFromNode(e);else return}readFeatureCollectionMetadataFromDocument(e){for(let t=e.firstChild;t;t=t.nextSibling)if(t.nodeType==Node.ELEMENT_NODE)return this.readFeatureCollectionMetadataFromNode(t)}readFeatureCollectionMetadataFromNode(e){const t={},r=Y(e.getAttribute("numberOfFeatures"));return t.numberOfFeatures=r,P(t,we,e,[],this.gmlFormat_)}readTransactionResponseFromDocument(e){for(let t=e.firstChild;t;t=t.nextSibling)if(t.nodeType==Node.ELEMENT_NODE)return this.readTransactionResponseFromNode(t)}readTransactionResponseFromNode(e){return P({},_t,e,[])}writeGetFeature(e){const t=y(oe[this.version_],"GetFeature");t.setAttribute("service","WFS"),t.setAttribute("version",this.version_),e.handle&&t.setAttribute("handle",e.handle),e.outputFormat&&t.setAttribute("outputFormat",e.outputFormat),e.maxFeatures!==void 0&&t.setAttribute("maxFeatures",String(e.maxFeatures)),e.resultType&&t.setAttribute("resultType",e.resultType),e.startIndex!==void 0&&t.setAttribute("startIndex",String(e.startIndex)),e.count!==void 0&&t.setAttribute("count",String(e.count)),e.viewParams!==void 0&&t.setAttribute("viewParams",e.viewParams),t.setAttributeNS(se,"xsi:schemaLocation",this.schemaLocation_);const r={node:t};if(Object.assign(r,{version:this.version_,srsName:e.srsName,featureNS:e.featureNS?e.featureNS:this.featureNS_,featurePrefix:e.featurePrefix,propertyNames:e.propertyNames?e.propertyNames:[]}),X(Array.isArray(e.featureTypes),11),typeof e.featureTypes[0]=="string"){let n=e.filter;e.bbox&&(X(e.geometryName,12),n=this.combineBboxAndFilter(e.geometryName,e.bbox,e.srsName,n)),Object.assign(r,{geometryName:e.geometryName,filter:n}),Ue(t,e.featureTypes,[r])}else e.featureTypes.forEach(n=>{const i=this.combineBboxAndFilter(n.geometryName,n.bbox,e.srsName,e.filter);Object.assign(r,{geometryName:n.geometryName,filter:i}),Ue(t,[n.name],[r])});return t}combineBboxAndFilter(e,t,r,n){const i=Ct(e,t,r);return n?Lt(n,i):i}writeTransaction(e,t,r,n){const i=[],s=n.version?n.version:this.version_,a=y(oe[s],"Transaction");a.setAttribute("service","WFS"),a.setAttribute("version",s);let u;n&&(u=n.gmlOptions?n.gmlOptions:{},n.handle&&a.setAttribute("handle",n.handle)),a.setAttributeNS(se,"xsi:schemaLocation",Ee[s]);const p=bt(a,u,s,n);return e&&J("Insert",e,i,p),t&&J("Update",t,i,p),r&&J("Delete",r,i,p),n.nativeElements&&J("Native",n.nativeElements,i,p),a}readProjectionFromDocument(e){for(let t=e.firstChild;t;t=t.nextSibling)if(t.nodeType==Node.ELEMENT_NODE)return this.readProjectionFromNode(t);return null}readProjectionFromNode(e){if(e.firstElementChild&&e.firstElementChild.firstElementChild){e=e.firstElementChild.firstElementChild;for(let t=e.firstElementChild;t;t=t.nextElementSibling)if(!(t.childNodes.length===0||t.childNodes.length===1&&t.firstChild.nodeType===3)){const r=[{}];return this.gmlFormat_.readGeometryElement(t,r),x(r.pop().srsName)}}return null}}function bt(o,e,t,r){const n=r.featurePrefix?r.featurePrefix:Je;let i;return t==="1.0.0"?i=2:t==="1.1.0"?i=3:t==="2.0.0"&&(i=3.2),Object.assign({node:o},{version:t,featureNS:r.featureNS,featureType:r.featureType,featurePrefix:n,gmlVersion:i,hasZ:r.hasZ,srsName:r.srsName},e)}function J(o,e,t,r){L(r,Qe,_(o),e,t)}function Re(o,e){return P({},At,o,e)}const Ft={"http://www.opengis.net/ogc":{FeatureId:g(function(o,e){return o.getAttribute("fid")})},"http://www.opengis.net/ogc/1.1":{FeatureId:g(function(o,e){return o.getAttribute("fid")})}};function Se(o,e){G(Ft,o,e)}const vt={"http://www.opengis.net/wfs":{Feature:Se},"http://www.opengis.net/wfs/2.0":{Feature:Se}};function Pe(o,e){return P([],vt,o,e)}function Ne(o,e,t){const r=t[t.length-1],n=r.featureType,i=r.featureNS,s=r.gmlVersion,a=y(i,n);o.appendChild(a),s===2?q.prototype.writeFeatureElement(a,e,t):s===3?E.prototype.writeFeatureElement(a,e,t):ue.prototype.writeFeatureElement(a,e,t)}function Ke(o,e,t){const n=t[t.length-1].version,i=ce[n],s=y(i,"Filter"),a=y(i,"FeatureId");s.appendChild(a),a.setAttribute("fid",e),o.appendChild(s)}function ge(o,e){o=o||Je;const t=o+":";return e.startsWith(t)?e:t+e}function Me(o,e,t){const r=t[t.length-1];X(e.getId()!==void 0,26);const n=r.featureType,i=r.featurePrefix,s=r.featureNS,a=ge(i,n);o.setAttribute("typeName",a),o.setAttributeNS(pe,"xmlns:"+i,s);const u=e.getId();u!==void 0&&Ke(o,u,t)}function Le(o,e,t){const r=t[t.length-1];X(e.getId()!==void 0,27);const n=r.version,i=r.featureType,s=r.featurePrefix,a=r.featureNS,u=ge(s,i),p=e.getGeometryName();o.setAttribute("typeName",u),o.setAttributeNS(pe,"xmlns:"+s,a);const h=e.getId();if(h!==void 0){const f=e.getKeys(),m=[];for(let N=0,M=f.length;N<M;N++){const I=e.get(f[N]);if(I!==void 0){let b=f[N];I&&typeof I.getSimplifiedGeometry=="function"&&(b=p),m.push({name:b,value:I})}}L({version:n,gmlVersion:r.gmlVersion,node:o,hasZ:r.hasZ,srsName:r.srsName},Qe,_("Property"),m,t),Ke(o,h,t)}}function Ce(o,e,t){const r=t[t.length-1],n=r.version,i=oe[n],s=y(i,"Name"),a=r.gmlVersion;if(o.appendChild(s),A(s,e.name),e.value!==void 0&&e.value!==null){const u=y(i,"Value");o.appendChild(u),e.value&&typeof e.value.getSimplifiedGeometry=="function"?a===2?q.prototype.writeGeometryElement(u,e.value,t):a===3?E.prototype.writeGeometryElement(u,e.value,t):ue.prototype.writeGeometryElement(u,e.value,t):A(u,e.value)}}function Ae(o,e,t){e.vendorId&&o.setAttribute("vendorId",e.vendorId),e.safeToIgnore!==void 0&&o.setAttribute("safeToIgnore",String(e.safeToIgnore)),e.value!==void 0&&A(o,e.value)}const te={"http://www.opengis.net/wfs":{Query:l(_e)},"http://www.opengis.net/wfs/2.0":{Query:l(_e)},"http://www.opengis.net/ogc":{During:l(Oe),And:l(K),Or:l(K),Not:l(be),BBOX:l(Te),Contains:l(v),Intersects:l(v),Within:l(v),DWithin:l(Ie),PropertyIsEqualTo:l(T),PropertyIsNotEqualTo:l(T),PropertyIsLessThan:l(T),PropertyIsLessThanOrEqualTo:l(T),PropertyIsGreaterThan:l(T),PropertyIsGreaterThanOrEqualTo:l(T),PropertyIsNull:l(Fe),PropertyIsBetween:l(ve),PropertyIsLike:l(xe)},"http://www.opengis.net/fes/2.0":{During:l(Oe),And:l(K),Or:l(K),Not:l(be),BBOX:l(Te),Contains:l(v),Disjoint:l(v),Intersects:l(v),ResourceId:l(Gt),Within:l(v),DWithin:l(Ie),PropertyIsEqualTo:l(T),PropertyIsNotEqualTo:l(T),PropertyIsLessThan:l(T),PropertyIsLessThanOrEqualTo:l(T),PropertyIsGreaterThan:l(T),PropertyIsGreaterThanOrEqualTo:l(T),PropertyIsNull:l(Fe),PropertyIsBetween:l(ve),PropertyIsLike:l(xe)}};function _e(o,e,t){const r=t[t.length-1],n=r.version,i=r.featurePrefix,s=r.featureNS,a=r.propertyNames,u=r.srsName;let p;i?p=ge(i,e):p=e;let h;n==="2.0.0"?h="typeNames":h="typeName",o.setAttribute(h,p),u&&o.setAttribute("srsName",u),s&&o.setAttributeNS(pe,"xmlns:"+i,s);const f=Object.assign({},r);f.node=o,L(f,Tt,_("PropertyName"),a,t);const m=r.filter;if(m){const N=y(re(n),"Filter");o.appendChild(N),xt(N,m,t)}}function xt(o,e,t){const r=t[t.length-1],n={node:o};Object.assign(n,{context:r}),L(n,te,_(e.getTagName()),[e],t)}function Te(o,e,t){const r=t[t.length-1],i=r.context.version;r.srsName=e.srsName;const s=me[i];$(i,o,e.geometryName),s.prototype.writeGeometryElement(o,e.extent,t)}function Gt(o,e,t){o.setAttribute("rid",e.rid)}function v(o,e,t){const r=t[t.length-1],i=r.context.version;r.srsName=e.srsName;const s=me[i];$(i,o,e.geometryName),s.prototype.writeGeometryElement(o,e.geometry,t)}function Ie(o,e,t){const i=t[t.length-1].context.version;v(o,e,t);const s=y(re(i),"Distance");A(s,e.distance.toString()),i==="2.0.0"?s.setAttribute("uom",e.unit):s.setAttribute("units",e.unit),o.appendChild(s)}function Oe(o,e,t){const i=t[t.length-1].context.version;k(de[i],"ValueReference",o,e.propertyName);const s=y(F,"TimePeriod");o.appendChild(s);const a=y(F,"begin");s.appendChild(a),Ge(a,e.begin);const u=y(F,"end");s.appendChild(u),Ge(u,e.end)}function K(o,e,t){const n=t[t.length-1].context,i={node:o};Object.assign(i,{context:n});const s=e.conditions;for(let a=0,u=s.length;a<u;++a){const p=s[a];L(i,te,_(p.getTagName()),[p],t)}}function be(o,e,t){const n=t[t.length-1].context,i={node:o};Object.assign(i,{context:n});const s=e.condition;L(i,te,_(s.getTagName()),[s],t)}function T(o,e,t){const i=t[t.length-1].context.version;e.matchCase!==void 0&&o.setAttribute("matchCase",e.matchCase.toString()),$(i,o,e.propertyName),ee(i,o,""+e.expression)}function Fe(o,e,t){const i=t[t.length-1].context.version;$(i,o,e.propertyName)}function ve(o,e,t){const i=t[t.length-1].context.version,s=re(i);$(i,o,e.propertyName);const a=y(s,"LowerBoundary");o.appendChild(a),ee(i,a,""+e.lowerBoundary);const u=y(s,"UpperBoundary");o.appendChild(u),ee(i,u,""+e.upperBoundary)}function xe(o,e,t){const i=t[t.length-1].context.version;o.setAttribute("wildCard",e.wildCard),o.setAttribute("singleChar",e.singleChar),o.setAttribute("escapeChar",e.escapeChar),e.matchCase!==void 0&&o.setAttribute("matchCase",e.matchCase.toString()),$(i,o,e.propertyName),ee(i,o,""+e.pattern)}function k(o,e,t,r){const n=y(o,e);A(n,r),t.appendChild(n)}function ee(o,e,t){k(re(o),"Literal",e,t)}function $(o,e,t){o==="2.0.0"?k(de[o],"ValueReference",e,t):k(ce[o],"PropertyName",e,t)}function Ge(o,e){const t=y(F,"TimeInstant");o.appendChild(t);const r=y(F,"timePosition");t.appendChild(r),A(r,e)}function Ue(o,e,t){const r=t[t.length-1],n=Object.assign({},r);n.node=o,L(n,te,_("Query"),e,t)}function re(o){let e;return o==="2.0.0"?e=de[o]:e=ce[o],e}const Ut=Ot,Dt=o=>{const t=j.getLayers().getArray().find(i=>i.get("name")===o).getSource().getParams().LAYERS,r=ot(j.getLayers().getArray().find(i=>i.get("name")===o).getSource().url_),n=new Ut().writeGetFeature({srsName:"EPSG:3857",featurePrefix:"geonode",featureTypes:[t],outputFormat:"application/json"});return fetch(`${r}wfs`,{method:"POST",body:new XMLSerializer().serializeToString(n),headers:{"Content-Type":"text/xml"}}).then(i=>i.json())},Bt=()=>{const o=`
      <div class="mx-1  order-2">
      <button
        type="button" 
        class="btn btn-danger btn-sm btn-circle" 
        id="attributeTableBtn" 
        x-tooltip.placement.left="'Attribute table'"
        @click="$store.attributeTable.process_attribute_table()"
        :class="$store.attributeTable.componentIsActive ? 'bg-danger' : 'btn-light'">
        <i data-feather="list" class="size-16"></i>

      </button>
    </div>
      `;var e=document.getElementById("rightMiddleSlot");e.insertAdjacentHTML("beforeend",o);const t=`
    <div id="attributeTable" class="position-absolute bottom-0 end-0 p-0 bg-white border-top px-1" style="width: 100%; height: 40vh; z-index:1000" x-show="$store.attributeTable.componentIsActive">
      <div class="offcanvas-header d-flex justify-content-between align-items-center px-3 mt-3">
          <div class="d-flex align-items-center">
              <!-- Layer Selection -->
              <div class="layer-select-container me-2">
                  <select id="layerSelect" class="form-select form-select-sm">
                      <template x-for="option in $store.attributeTable.visisbleLayers">
                          <option :value="option.get('name')" x-text="option.get('name')"></option>
                      </template>
                  </select>
              </div>
              <!-- Row Count Selection -->
              <div class="ms-2">
                  <select x-model="$store.attributeTable.rowCount" class="form-select form-select-sm" id="rowCountSelect">
                      <option value="5">5</option>
                      <option value="10">10</option>
                      <option value="50">50</option>
                  </select>
              </div>
          </div>

          <div class="d-flex align-items-center">
              <!-- Items Shown Indicator -->
              <p class="mb-0 mx-3" x-text="$store.attributeTable.filteredFeatures().length + ' items shown'"></p>
           
              <!-- Search Input -->
              <div class="d-flex me-2">
                  <label for="searchInput" class="me-2 mb-0"><i class="bi bi-search"></i></label>
                  <input type="text" id="searchInput" class="form-control form-control-sm" placeholder="Search..." x-model="$store.attributeTable.searchQuery" style="width: 200px;">
              </div>

              <!-- Close Button -->
              <button type="button" class="btn-close" aria-label="Close" @click="$store.attributeTable.closePanel()"></button>
          </div>
      </div>


            <div class="offcanvas-body mt-4 px-3" id="attributeTableBody">

              <!-- table -->
              <div style="width: 100%; overflow-y: auto;">

              <!-- Alpine.js Component for Feature Properties Table -->
              <div x-cloak>
                <template x-if="!$store.attributeTable.fetchSuccessful">
                  <p>Sorry, no items received.</p>
                </template>

                <template x-if="$store.attributeTable.fetchSuccessful">
                  <table class="attributesTable table table-sm table-striped mb-0" id="attributesTable">
                    <thead>
                        <tr>
                          <th>
                            <span class="attributTable_col" x-text="'zoom to'"></span>
                          </th>
                          <template x-if="$store.attributeTable.features.length > 0">
                            <template x-for="key in Object.keys($store.attributeTable.features[0].properties)" :key="key">
                              <th>
                                <span class="attributTable_col" x-text="key"></span>
                              </th>
                            </template>
                          </template>
                        </tr>
                      </thead>
                      <tbody>
                          <template x-for="feature in $store.attributeTable.paginatedFeatures()" :key="feature.id">
                          <tr :class="$store.attributeTable.activeFeatures.includes(String(feature.properties['fid'])) ? 'highlight-row' : ''">
                            <td>
                            <p x-show="!$store.attributeTable.activeFeatures.includes(String(feature.properties['fid']))">
                              <a href="#" :data-id="feature.properties['fid']" @click="$store.attributeTable.zoomTo()" >
                                  <i data-feather="map-pin" class="size-16"></i>
                              </a>      
                            </p>

                            <p x-show="$store.attributeTable.activeFeatures.includes(String(feature.properties['fid']))">
                              <a href="#" :data-id="feature.properties['fid']" @click="$store.attributeTable.zoomTo()" >
                                <i data-feather="check" class="size-16"></i>
                              </a>      
                            </p>

                            </td>
                            <template x-for="[key, value] in Object.entries(feature.properties)" :key="key">
                              <td>
                                <span class="attributTable_col" x-html="$store.attributeTable.decorateValue(value)"> </span>
                              </td>
                            </template>
                          </tr>
                        </template>
                      </tbody>
                  </table>
                </template>
                
              </div>


            
            </div>
            <!-- Pagination -->
            <template x-if="$store.attributeTable.fetchSuccessful">

              <nav aria-label="Page navigation">
                <ul class="pagination pagination-sm justify-content-end mt-3">
                  <!-- First Page Link -->
                  <li class="page-item" :class="{ disabled: $store.attributeTable.currentPage === 1 }">
                    <a class="page-link" href="#" @click.prevent="$store.attributeTable.setFirstPage()">
                      First
                    </a>
                  </li>
              
                  <!-- Dynamic Page Links -->
                  <template x-for="page in $store.attributeTable.pageRange()" :key="page">
                    <li class="page-item" :class="{ active: $store.attributeTable.currentPage === page }">
                      <a class="page-link" href="#" x-text="page" @click.prevent="$store.attributeTable.setPage(page)">
                      </a>
                    </li>
                  </template>
              
                  <!-- Last Page Link -->
                  <li class="page-item" :class="{ disabled: $store.attributeTable.currentPage === $store.attributeTable.totalPages() }">
                    <a class="page-link" href="#" @click.prevent="$store.attributeTable.setLastPage()">
                      Last
                    </a>
                  </li>
                </ul>
              </nav>
              </template>
    </div>
  </div>

  `;var r=document.getElementById("map");r.insertAdjacentHTML("afterend",t)},zt=()=>{z.store("attributeTable",{componentIsActive:!1,visisbleLayers:[],features:[],activeFeatures:[],isValidUrl:function(e){return it(e)},zoomToCoordinates:[],closePanel:function(){U("deleteMapPins",{}),this.componentIsActive=!1,this.activeFeatures=[],this.zoomToCoordinates=[],z.store("pluginStatus").mapClickEnabled=!0},zoomTo:function(){const e=event.target.closest("a").getAttribute("data-id"),t=this.features.find(r=>r.properties.fid==e);if(t){const r=t.geometry;let n,i;switch(this.activeFeatures.includes(e)?this.activeFeatures=this.activeFeatures.filter(function(s){return s!==e}):this.activeFeatures.push(e),r.type){case"Point":i=r.coordinates;const s=100;n=[r.coordinates[0]-s,r.coordinates[1]-s,r.coordinates[0]+s,r.coordinates[1]+s];break;case"Polygon":n=H(r.coordinates[0].flat()),i=Q(n);break;case"MultiPolygon":const a=r.coordinates.flat(2);n=H(a),i=Q(n);break;case"LineString":n=H(r.coordinates),i=Q(n);break;case"MultiLineString":const u=r.coordinates.flat();n=H(u),i=Q(n);break;default:console.error("Unsupported geometry type:",r.type);return}if(n){const s=this.zoomToCoordinates.findIndex(a=>a[0]===i[0]&&a[1]===i[1]);s===-1?this.zoomToCoordinates.push([i[0],i[1]]):this.zoomToCoordinates.splice(s,1),U("deleteMapPins",{}),U("addMapPins",{pin_coordinates:this.zoomToCoordinates,fitView:!0,moveCenterLeft:!1,bottomPadding:"40vh"})}}},searchQuery:"",rowCount:5,currentPage:1,fetchSuccessful:!1,decorateValue:function(e){return at(e,["createLinkForUrl","decodeUrl"])},filteredFeatures:function(){lt.replace();const e=this.searchQuery.toLowerCase(),t=this.features.filter(r=>Object.entries(r.properties).some(([n,i])=>typeof i=="string"||typeof i=="number"?i.toString().toLowerCase().includes(e):!1));return console.log(`Filtered Features: Query = '${e}', Count = ${t.length}`),t},paginatedFeatures:function(){const e=(this.currentPage-1)*this.rowCount,t=e+Number(this.rowCount),r=this.filteredFeatures().slice(e,t);return console.log(`Paginated Features: Current Page = ${this.currentPage}, Row Count = ${this.rowCount}, Start = ${e}, End = ${t}, Count = ${r.length}`),r},totalPages:function(){const e=this.filteredFeatures().length;return Math.ceil(e/this.rowCount)},setPage:function(e){this.currentPage=e},pageRange:function(){const t=Math.max(1,this.currentPage-2),r=Math.min(this.totalPages(),this.currentPage+2);let n=[];for(let i=t;i<=r;i++)n.push(i);return n},setFirstPage:function(){this.currentPage=1},setPage:function(e){this.currentPage=e,console.log(`Set Page: Current Page Set to = ${e}`)},process_attribute_table:function(){z.store("pluginStatus").closeAllOffcanvas("attributeTable"),this.componentIsActive=!this.componentIsActive,z.store("pluginStatus").mapClickEnabled=!this.componentIsActive,this.populateLayerSelect()},populateLayerSelect:function(){const e=j.getLayers().getArray().filter(t=>t.getVisible());this.visisbleLayers=e,e.length>0&&(this.selectedLayer=e[0].get("name"),this.updateTableForLayer(this.selectedLayer))},updateRowCount:function(){this.currentPage=1,console.log(`Row Count Updated: New Row Count = ${this.rowCount}, Current Page Reset to = ${this.currentPage}`)},updateTableForLayer:function(e=null){this.currentTable=!0;const t=e||document.getElementById("layerSelect").value,r=j.getLayers().getArray().find(n=>n.get("name")===t);this.activeFeatures=[],this.zoomToCoordinates=[],U("deleteMapPins",{}),U("showLoading",{}),Dt(t).then(n=>{if(n&&n.features){if(r.get("dataset")&&r.get("dataset").attribute_set){const i=r.get("dataset").attribute_set.filter(s=>s.visible).map(s=>s.attribute);this.features=n.features.map(s=>{const a={};return i.forEach(u=>{s.properties.hasOwnProperty(u)&&(a[u]=s.properties[u])}),{...s,properties:a}})}else this.features=n.features;this.fetchSuccessful=!0}else this.fetchSuccessful=!1;U("hideLoading",{})}).catch(n=>{console.error("Error:",n),this.fetchSuccessful=!1})}}),st([[Bt,"#attributeTable"]]),document.getElementById("layerSelect").addEventListener("change",function(){z.store("attributeTable").updateTableForLayer(this.value)})};export{zt as initialize};
//# sourceMappingURL=attributeTable-c3595655.js.map
