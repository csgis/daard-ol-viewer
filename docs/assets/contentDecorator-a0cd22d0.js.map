{"version":3,"file":"contentDecorator-a0cd22d0.js","sources":["../../components/core/contentDecorator/decorators/appendEuroToNumber.js","../../components/core/contentDecorator/decorators/createLinkForUrl.js","../../components/core/contentDecorator/decorators/decodeUrl.js","../../components/core/contentDecorator/decorators/formatImageTag.js","../../components/core/contentDecorator/decorators/harmonizeMonth.js","../../components/core/contentDecorator/decorators/harmonizeTrueFalse.js","../../components/core/contentDecorator/decorators/harmonizeUnknown.js","../../components/core/contentDecorator/decorators/removeListIfOnlyOneLi.js","../../components/core/contentDecorator/decorators/replaceBullet.js","../../components/core/contentDecorator/decorators/replaceBulletwithComma.js","../../components/core/contentDecorator/decorators/replaceDatingMethod.js","../../components/core/contentDecorator/decorators/replaceUndefined.js","../../components/core/contentDecorator/decorators/toggleLongText.js","../../components/core/contentDecorator/contentDecorator.js"],"sourcesContent":["const appendEuroToNumber = (value) => {\n    return typeof value === 'number' ? `${value} €` : value;\n};\n\nexport default appendEuroToNumber;\n","const createLinkForUrl = (value) => {\n\n    if (typeof value === 'undefined' \n        || typeof value !== 'string'\n        || value == undefined \n        || value == 'undefined' \n        || value == null \n        || value == '' \n        || value == false) {\n        return value;\n    }\n\n    const urlPattern = /(\\bhttps?:\\/\\/[-A-Z0-9+&@#/%?=~_|!:,.;()]*[-A-Z0-9+&@#/%=~_|])/ig;\n    return value.replace(urlPattern, (url) => {\n        let displayUrl = url.length > 40 ? url.substring(0, 40) + '…' : url;\n        return `<a href=\"${url}\" x-tooltip.placement.top=\"'Link opens in new window'\" target=\"_blank\" class=\"link-secondary\">${displayUrl}</a>`;\n    });\n};\n\nexport default createLinkForUrl;\n","const decodeUrl = (value) => {\n    try {\n        // Check if value is a string and URL-encoded\n        if (typeof value === 'string' && decodeURIComponent(value) !== value) {\n            return decodeURIComponent(value);\n        }\n        return value;\n    } catch (error) {\n        // In case of an error (e.g., value is not URL-encoded), return the original value\n        return value;\n    }\n};\n\nexport default decodeUrl;\n","const formatImageTag = (value) => {\n    const imgPattern = /\\.(jpeg|jpg|gif|png)$/;\n    return imgPattern.test(value) ? `<img src=\"${value}\" alt=\"Image\" style=\"max-height: 100px; max-width: 100px;\" />` : value;\n};\n\nexport default formatImageTag;\n","const harmonizeMonth = (value) => {\n    // Check if value is a string that equals 'unknown' or 'UNKNOWN' (case-insensitive)\n    if (typeof value === 'string' && value.toLowerCase() === 'months') {\n        alert(\"found it\")\n        return 'months';\n    }\n\n    // Return the original value if none of the specific cases match\n    return value;\n};\n\nexport default harmonizeMonth;\n","const harmonizeTrueFalse = (value) => {\n    // Check if value is a string that equals 'unknown' or 'UNKNOWN' (case-insensitive)\n    if (typeof value === 'string' && value.toLowerCase() === 'true') {\n        return 'true';\n    }\n\n    if (typeof value === 'string' && value.toLowerCase() === 'false') {\n        return 'false';\n    }\n\n    // Return the original value if none of the specific cases match\n    return value;\n};\n\nexport default harmonizeTrueFalse;\n","const harmonizeUnknown = (value) => {\n    // Check if value is a string that equals 'unknown' or 'UNKNOWN' (case-insensitive)\n    if (typeof value === 'string' && value.toLowerCase() === 'unknown') {\n        return 'unknown';\n    }\n\n    // Return the original value if none of the specific cases match\n    return value;\n};\n\nexport default harmonizeUnknown;\n","const removeListIfOnlyOneLi = (value) => {\n    // Regex pattern to find all <li>...</li> tags\n    const liPattern = /<li>.*?<\\/li>/gs;\n\n    // Find all <li>...</li> matches\n    const liMatches = value.match(liPattern);\n\n    // If there's exactly one <li>...</li>, remove <ul>, </ul>, <li>, and </li> tags\n    if (liMatches && liMatches.length === 1) {\n        return value.replace(/<\\/?ul>/g, '').replace(/<\\/?li>/g, '');\n    }\n\n    // Return the original value if there's not exactly one <li> item\n    return value;\n};\n\nexport default removeListIfOnlyOneLi;\n","const replaceBullet = (value) => {\n    \n    if (typeof value === 'undefined' \n        || typeof value !== 'string'\n        || value == undefined \n        || value == 'undefined' \n        || value == null \n        || value == '' \n        || value == false) {\n            return value;\n        }\n\n    return value.replaceAll('●', '<br>')\n};\n\nexport default replaceBullet;\n","const replaceBulletwithComma = (value) => {\n\n    if (typeof value === 'undefined' \n        || typeof value !== 'string'\n        || value == undefined \n        || value == 'undefined' \n        || value == null \n        || value == '' \n        || value == false) {\n            return value;\n        }\n\n    return value.replaceAll(' ● ', ', ')\n};\n\nexport default replaceBulletwithComma;\n","const replaceDatingMethod = (value) => {\n    // Check if the value is undefined, not a string, or empty\n    if (typeof value === 'undefined' \n        || typeof value !== 'string'\n        || value === undefined \n        || value === 'undefined' \n        || value === null \n        || value === '' \n        || value === false) {\n            return value;\n    }\n\n    // Mapping of values to replace\n    const replacements = {\n        'human_bone': 'Human bone',\n        'animal_bone': 'Animal bone',\n        'horn': 'Horn',\n        'ivory': 'Ivory',\n        'tooth': 'Tooth',\n        'hair': 'Hair',\n        'skin': 'Skin',\n        'soft_tissues': 'Soft tissues',\n        'wood': 'Wood',\n        'textile': 'Textile',\n        'botanical_remains': 'Botanical remains',\n        'stratigraphic': 'Stratigraphic',\n        'funerary-structures': 'Funerary structures',\n        'grave_goods': 'Grave goods',\n        'archives': 'Archives',\n        'texts': 'Texts',\n        'epigraphic_sources': 'Epigraphic sources',\n        'numismatic': 'Numismatic',\n        'unknown': 'Unknown',\n    };\n\n    // Iterate over the replacements object and replace each occurrence of the key in the value\n    Object.keys(replacements).forEach(key => {\n        const pattern = new RegExp(key, 'g');\n        value = value.replace(pattern, replacements[key]);\n    });\n\n    return value;\n};\n\nexport default replaceDatingMethod;\n","const replaceUndefined = (value) => {\n\n    // Check if the value is undefined or an empty string\n    if (typeof value === 'undefined' \n        || value == undefined \n        || value == 'undefined' \n        || value == null \n        || value == 'null' \n        || typeof value === 'null' \n        || value == '' \n        || value == false) {\n            return '-';\n        }\n\n    return value;\n};\n\nexport default replaceUndefined;","const toggleLongText = (value) => {\n\n    if (typeof value === 'undefined' \n        || typeof value !== 'string'\n        || value == undefined \n        || value == 'undefined' \n        || value == null \n        || value == '' \n        || value == false) {\n            return value;\n        }\n\n    if (value.length > 600) {\n        var outStr = `<details><summary style=\"cursor: pointer;\">Read more</summary><p class=\"about__text\">${value}</p></details>`;\n    } else {\n        var outStr = value\n    }\n\n\n    return outStr\n};\n\nexport default toggleLongText;\n\n\n","import appendEuroToNumber from './decorators/appendEuroToNumber';\nimport createLinkForUrl from './decorators/createLinkForUrl';\nimport decodeUrl from './decorators/decodeUrl.js'\nimport formatImageTag from './decorators/formatImageTag';\nimport harmonizeMonth from './decorators/harmonizeMonth.js';\nimport harmonizeTrueFalse from './decorators/harmonizeTrueFalse.js';\nimport harmonizeUnknown from './decorators/harmonizeUnknown.js';\nimport removeListIfOnlyOneLi from './decorators/removeListIfOnlyOneLi'\nimport replaceBullet from './decorators/replaceBullet';\nimport replaceBulletwithComma from './decorators/replaceBulletwithComma';\nimport replaceDatingMethod from './decorators/replaceDatingMethod';\nimport replaceUndefined from './decorators/replaceUndefined';\nimport toggleLongText from './decorators/toggleLongText';\n\nconst decorators = {\n    appendEuroToNumber,\n    createLinkForUrl,\n    formatImageTag,\n    decodeUrl,\n    replaceBullet,\n    harmonizeUnknown,\n    harmonizeTrueFalse,\n    harmonizeMonth,\n    removeListIfOnlyOneLi,\n    replaceBulletwithComma,\n    replaceUndefined,\n    toggleLongText,\n    replaceDatingMethod\n};\n\nconst decorateValue = (value, usedDecorators = []) => {\n    Object.entries(decorators).forEach(([decoratorName, decoratorFunction]) => {\n        if (usedDecorators.includes(decoratorName)) {\n            value = decoratorFunction(value);\n        }\n    });\n    return value;\n};\n\nexport { decorateValue };\n"],"names":["appendEuroToNumber","value","createLinkForUrl","urlPattern","url","displayUrl","decodeUrl","formatImageTag","harmonizeMonth","harmonizeTrueFalse","harmonizeUnknown","removeListIfOnlyOneLi","liPattern","liMatches","replaceBullet","replaceBulletwithComma","replaceDatingMethod","replacements","key","pattern","replaceUndefined","toggleLongText","outStr","decorators","decorateValue","usedDecorators","decoratorName","decoratorFunction"],"mappings":"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"}