{"version":3,"file":"contentDecorator-805dceda.js","sources":["../../components/core/contentDecorator/decorators/appendEuroToNumber.js","../../components/core/contentDecorator/decorators/createLinkForUrl.js","../../components/core/contentDecorator/decorators/decodeUrl.js","../../components/core/contentDecorator/decorators/formatImageTag.js","../../components/core/contentDecorator/decorators/harmonizeMonth.js","../../components/core/contentDecorator/decorators/harmonizeTrueFalse.js","../../components/core/contentDecorator/decorators/harmonizeUnknown.js","../../components/core/contentDecorator/decorators/removeListIfOnlyOneLi.js","../../components/core/contentDecorator/decorators/replaceBullet.js","../../components/core/contentDecorator/contentDecorator.js"],"sourcesContent":["const appendEuroToNumber = (value) => {\n    return typeof value === 'number' ? `${value} €` : value;\n};\n\nexport default appendEuroToNumber;\n","const createLinkForUrl = (value) => {\n    const urlPattern = /^(http|https):\\/\\/[^ \"]+$/;\n    return urlPattern.test(value) ? `<a href=\"${value}\" x-tooltip.placement.top=\"'Link opens in new window'\" target=\"_blank\" class=\"link-secondary\">${value}</a>` : value;\n};\n\nexport default createLinkForUrl;\n","const decodeUrl = (value) => {\n    try {\n        // Check if value is a string and URL-encoded\n        if (typeof value === 'string' && decodeURIComponent(value) !== value) {\n            return decodeURIComponent(value);\n        }\n        return value;\n    } catch (error) {\n        // In case of an error (e.g., value is not URL-encoded), return the original value\n        return value;\n    }\n};\n\nexport default decodeUrl;\n","const formatImageTag = (value) => {\n    const imgPattern = /\\.(jpeg|jpg|gif|png)$/;\n    return imgPattern.test(value) ? `<img src=\"${value}\" alt=\"Image\" style=\"max-height: 100px; max-width: 100px;\" />` : value;\n};\n\nexport default formatImageTag;\n","const harmonizeMonth = (value) => {\n    // Check if value is a string that equals 'unknown' or 'UNKNOWN' (case-insensitive)\n    if (typeof value === 'string' && value.toLowerCase() === 'months') {\n        alert(\"found it\")\n        return 'months';\n    }\n\n    // Return the original value if none of the specific cases match\n    return value;\n};\n\nexport default harmonizeMonth;\n","const harmonizeTrueFalse = (value) => {\n    // Check if value is a string that equals 'unknown' or 'UNKNOWN' (case-insensitive)\n    if (typeof value === 'string' && value.toLowerCase() === 'true') {\n        return 'true';\n    }\n\n    if (typeof value === 'string' && value.toLowerCase() === 'false') {\n        return 'false';\n    }\n\n    // Return the original value if none of the specific cases match\n    return value;\n};\n\nexport default harmonizeTrueFalse;\n","const harmonizeUnknown = (value) => {\n    // Check if value is a string that equals 'unknown' or 'UNKNOWN' (case-insensitive)\n    if (typeof value === 'string' && value.toLowerCase() === 'unknown') {\n        return 'unknown';\n    }\n\n    // Return the original value if none of the specific cases match\n    return value;\n};\n\nexport default harmonizeUnknown;\n","const removeListIfOnlyOneLi = (value) => {\n    // Regex pattern to find all <li>...</li> tags\n    const liPattern = /<li>.*?<\\/li>/gs;\n\n    // Find all <li>...</li> matches\n    const liMatches = value.match(liPattern);\n\n    // If there's exactly one <li>...</li>, remove <ul>, </ul>, <li>, and </li> tags\n    if (liMatches && liMatches.length === 1) {\n        return value.replace(/<\\/?ul>/g, '').replace(/<\\/?li>/g, '');\n    }\n\n    // Return the original value if there's not exactly one <li> item\n    return value;\n};\n\nexport default removeListIfOnlyOneLi;\n","const createLinkForUrl = (value) => {\n    return value.replaceAll('●', '<br>')\n};\n\nexport default createLinkForUrl;\n","import appendEuroToNumber from './decorators/appendEuroToNumber';\nimport createLinkForUrl from './decorators/createLinkForUrl';\nimport decodeUrl from './decorators/decodeUrl.js'\nimport formatImageTag from './decorators/formatImageTag';\nimport harmonizeMonth from './decorators/harmonizeMonth.js';\nimport harmonizeTrueFalse from './decorators/harmonizeTrueFalse.js';\nimport harmonizeUnknown from './decorators/harmonizeUnknown.js';\nimport removeListIfOnlyOneLi from './decorators/removeListIfOnlyOneLi'\nimport replaceBullet from './decorators/replaceBullet';\n\nconst decorators = {\n    appendEuroToNumber,\n    createLinkForUrl,\n    formatImageTag,\n    decodeUrl,\n    replaceBullet,\n    harmonizeUnknown,\n    harmonizeTrueFalse,\n    harmonizeMonth,\n    removeListIfOnlyOneLi\n};\n\nconst decorateValue = (value, usedDecorators = []) => {\n    Object.entries(decorators).forEach(([decoratorName, decoratorFunction]) => {\n        if (usedDecorators.includes(decoratorName)) {\n            value = decoratorFunction(value);\n        }\n    });\n    return value;\n};\n\nexport { decorateValue };\n"],"names":["appendEuroToNumber","value","createLinkForUrl","decodeUrl","formatImageTag","harmonizeMonth","harmonizeTrueFalse","harmonizeUnknown","removeListIfOnlyOneLi","liPattern","liMatches","decorators","replaceBullet","decorateValue","usedDecorators","decoratorName","decoratorFunction"],"mappings":"AAAA,MAAMA,EAAsBC,GACjB,OAAOA,GAAU,SAAW,GAAGA,CAAK,KAAOA,ECDhDC,EAAoBD,GACH,4BACD,KAAKA,CAAK,EAAI,YAAYA,CAAK,iGAAiGA,CAAK,OAASA,ECF9JE,EAAaF,GAAU,CACzB,GAAI,CAEA,OAAI,OAAOA,GAAU,UAAY,mBAAmBA,CAAK,IAAMA,EACpD,mBAAmBA,CAAK,EAE5BA,CACV,MAAe,CAEZ,OAAOA,CACV,CACL,ECXMG,EAAkBH,GACD,wBACD,KAAKA,CAAK,EAAI,aAAaA,CAAK,gEAAkEA,ECFlHI,EAAkBJ,GAEhB,OAAOA,GAAU,UAAYA,EAAM,YAAW,IAAO,UACrD,MAAM,UAAU,EACT,UAIJA,ECRLK,EAAsBL,GAEpB,OAAOA,GAAU,UAAYA,EAAM,YAAW,IAAO,OAC9C,OAGP,OAAOA,GAAU,UAAYA,EAAM,YAAW,IAAO,QAC9C,QAIJA,ECXLM,EAAoBN,GAElB,OAAOA,GAAU,UAAYA,EAAM,YAAW,IAAO,UAC9C,UAIJA,ECPLO,EAAyBP,GAAU,CAErC,MAAMQ,EAAY,kBAGZC,EAAYT,EAAM,MAAMQ,CAAS,EAGvC,OAAIC,GAAaA,EAAU,SAAW,EAC3BT,EAAM,QAAQ,WAAY,EAAE,EAAE,QAAQ,WAAY,EAAE,EAIxDA,CACX,ECdMC,EAAoBD,GACfA,EAAM,WAAW,IAAK,MAAM,ECSjCU,EAAa,CACf,mBAAAX,EACJ,iBAAIE,EACA,eAAAE,EACA,UAAAD,EACJ,cAAIS,EACA,iBAAAL,EACA,mBAAAD,EACA,eAAAD,EACA,sBAAAG,CACJ,EAEMK,EAAgB,CAACZ,EAAOa,EAAiB,MAC3C,OAAO,QAAQH,CAAU,EAAE,QAAQ,CAAC,CAACI,EAAeC,CAAiB,IAAM,CACnEF,EAAe,SAASC,CAAa,IACrCd,EAAQe,EAAkBf,CAAK,EAE3C,CAAK,EACMA"}