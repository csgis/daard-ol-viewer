{"version":3,"file":"featureInfo-7f395f55.js","sources":["../../node_modules/ol/render.js","../../components/core/clickIndicator/clickIndicator.js","../../components/core/featureInfo/featureInfo.js"],"sourcesContent":["/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform,\n} from './transform.js';\nimport {getSquaredTolerance} from './renderer/vector.js';\nimport {getTransformFromProjections, getUserProjection} from './proj.js';\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature~Feature} or\n * {@link module:ol/render/Feature~RenderFeature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * const canvas = document.createElement('canvas');\n * const render = toContext(\n *     canvas.getContext('2d'),\n *     {size: [100, 100]}\n * );\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]])\n * );\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, options) {\n  const canvas = context.canvas;\n  options = options ? options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  if (!(event.context instanceof CanvasRenderingContext2D)) {\n    throw new Error('Only works for render events from Canvas 2D layers');\n  }\n\n  // canvas may be at a different pixel ratio than frameState.pixelRatio\n  const canvasPixelRatio = event.inversePixelTransform[0];\n  const frameState = event.frameState;\n  const transform = multiplyTransform(\n    event.inversePixelTransform.slice(),\n    frameState.coordinateToPixelTransform\n  );\n  const squaredTolerance = getSquaredTolerance(\n    frameState.viewState.resolution,\n    canvasPixelRatio\n  );\n  let userTransform;\n  const userProjection = getUserProjection();\n  if (userProjection) {\n    userTransform = getTransformFromProjections(\n      userProjection,\n      frameState.viewState.projection\n    );\n  }\n\n  return new CanvasImmediateRenderer(\n    event.context,\n    canvasPixelRatio,\n    frameState.extent,\n    transform,\n    frameState.viewState.rotation,\n    squaredTolerance,\n    userTransform\n  );\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  return applyTransform(event.inversePixelTransform, pixel.slice(0));\n}\n","import {Circle as CircleStyle, Fill, Stroke, Style} from 'ol/style.js';\nimport {basemapLayers, map, source, vector} from '../mapSetup/mapSetup.js';\n\nimport Alpine from 'alpinejs';\nimport Feature from 'ol/Feature.js';\nimport Point from 'ol/geom/Point.js';\nimport {easeOut} from 'ol/easing.js';\nimport {getVectorContext} from 'ol/render.js';\nimport {unByKey} from 'ol/Observable.js';\n\nconst duration = 2000;\n\nconst addClickIndicator = (evt, flash_times = 1) =>{\n    if (!evt.coordinate) {\n        return; \n    }\n\n    const coordinate = evt.coordinate;\n    const geom = new Point([coordinate[0], coordinate[1]]);\n    const feature = new Feature(geom);\n\n    // Set the style with transparency\n    feature.setStyle(new Style({\n        image: new CircleStyle({\n            radius: 5, \n            fill: new Fill({\n                color: 'rgba(255, 255, 255, 0)' \n            }),\n            stroke: new Stroke({\n                color: 'rgba(255, 255, 255, 0)',\n                width: 1\n            })\n        })\n    }));\n\n    source.addFeature(feature);\n\n    flash(feature, flash_times); \n}\n\n\n\nconst flash = (feature, flash_times) => {\n    let flash_counter = 0;\n\n    let start = Date.now(); \n\n    let flashGeom = feature.getGeometry().clone(); \n\n    function animate(event) {\n        const frameState = event ? event.frameState : false;\n        if (!frameState || !frameState.time) {\n            return; \n        }\n\n        const elapsed = frameState.time - start;\n\n        if (elapsed >= duration) {\n            start = Date.now(); \n            flashGeom = feature.getGeometry().clone(); \n\n            if (flash_counter < flash_times) {\n                flash_counter++;\n                setTimeout(animate, 0);\n            } else {\n                unByKey(listenerKey);\n            }\n        }\n\n        const vectorContext = getVectorContext(event);\n        const elapsedRatio = elapsed / duration;\n        const radius = easeOut(elapsedRatio) * 25 + 5;\n        const opacity = easeOut(1 - elapsedRatio);\n\n        const style = new Style({\n            image: new CircleStyle({\n                radius: radius,\n                stroke: new Stroke({\n                    color: 'rgba(255, 0, 0, ' + opacity + ')',\n                    width: 0.25 + opacity,\n                }),\n            }),\n        });\n\n        vectorContext.setStyle(style);\n        vectorContext.drawGeometry(flashGeom);\n        map.render();\n    }\n\n    const active_layer = basemapLayers.find(layer => layer.getVisible());\n    const listenerKey = vector.on('postrender', animate);\n\n}\n\n\n// Initialize the plugin\nconst initialize = () => {\n    // if (map) {\n    //     map.on('singleclick', addClickIndicator);\n    // }\n    Alpine.store('pluginStatus').increasePluginLoadingStatus();\n\n\n};\n\nexport { initialize, addClickIndicator };\n","import { featureLayersGroup, map, view } from '../mapSetup/mapSetup.js';\n\nimport Alpine from 'alpinejs';\nimport { addClickIndicator } from '../clickIndicator/clickIndicator.js';\nimport { emitCustomEvent } from '../helper.js';\nimport { renderMarkupAndSetPluginReady } from '../helper.js'\n\nconst createFeatureInfoOffCanvasMarkup = () => {\n  const featureInfoOffcanvas = `\n  <div id=\"featureInfoOffcanvas\" class=\"position-absolute start-0 top-0 bg-white h-100 w-40 p-3 shadow z-3 overflow-scroll\" tabindex=\"-1\" aria-labelledby=\"featuresOffcanvasLabel\" x-show=\"$store.featureInfoStore.showOffCanvas\" x-transition>\n  <!-- Offcanvas Header -->\n  <div class=\"offcanvas-header d-flex justify-content-between\">\n    <h5 class=\"offcanvas-title\" id=\"featuresOffcanvasLabel\">Feature Information</h5>\n    <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"offcanvas\" aria-label=\"Close\" @click=\"$store.featureInfoStore.showOffCanvas = false\"></button>\n  </div>\n\n  <!-- Layer Selection -->\n  <div class=\"my-3\">\n  <label for=\"layerSelect\">Data found on the following layers:</label>\n  <select class=\"form-select\" x-model=\"$store.featureInfoStore.selectedOption\" x-on:change=\"$store.featureInfoStore.changeSelect($event.target.value)\" :disabled=\"Object.keys($store.featureInfoStore.featuresDict).length == 1\">\n    <template x-for=\"option in Object.keys($store.featureInfoStore.featuresDict)\" :key=\"option\">\n      <option :value=\"option\" x-text=\"option\"></option>\n    </template>\n  </select>\n</div>\n\n\n  <!-- Feature Container -->\n  <div class=\"offcanvas-body featureInfoContainer\">\n    <!-- Navigation Buttons -->\n    <div class=\"text-center my-2\">\n      <button class=\"btn btn-outline-primary btn-sm mx-1\" @click=\"$store.featureInfoStore.showPrevious()\" x-bind:disabled=\"$store.featureInfoStore.currentFeatureIndex == 0\" x-show=\"$store.featureInfoStore.filteredFeatures.length > 1\">Previous</button>\n      <span x-text=\"$store.featureInfoStore.currentFeatureIndex + 1 + ' of ' + $store.featureInfoStore.filteredFeatures.length\" x-show=\"$store.featureInfoStore.filteredFeatures.length > 1\"></span>\n      <button class=\"btn btn-outline-primary btn-sm mx-1\" @click=\"$store.featureInfoStore.showNext()\" x-bind:disabled=\"$store.featureInfoStore.currentFeatureIndex == $store.featureInfoStore.filteredFeatures.length - 1\" x-show=\"$store.featureInfoStore.filteredFeatures.length > 1\">Next</button>\n    </div>\n    \n    <!-- Feature Properties Table -->\n    <template x-if=\"$store.featureInfoStore.filteredFeatures.length > 0\">\n      <table class=\"table table-sm table-striped\">\n        <tbody>\n          <template x-if=\"$store.featureInfoStore.filteredFeatures[$store.featureInfoStore.currentFeatureIndex]\">\n            <template x-for=\"[key, value] in Object.entries($store.featureInfoStore.filteredFeatures[$store.featureInfoStore.currentFeatureIndex].properties)\" :key=\"key\">\n              <tr>\n                <td><strong x-text=\"key\"></strong></td>\n                <td><span x-text=\"value\"></span></td>\n              </tr>\n            </template>\n          </template>\n        </tbody>\n      </table>\n    </template>\n  </div>\n</div>\n\n  `;\n\n  const mapDIV = document.getElementById('map');\n  mapDIV.insertAdjacentHTML('afterend', featureInfoOffcanvas);\n};\n\nconst initialize = () => {\n  Alpine.store('featureInfoStore', {\n    featuresDict: {},\n    filteredFeatures: [],\n    currentFeatureIndex: 0,\n    selectedOption: \"\",\n    showOffCanvas: false,\n    visibleLayers: [],\n    selectedLayers: [],\n    init: function() {\n      this.updateVisibleLayers();\n      this.updateSelectedOption();\n    },\n    updateVisibleLayers: function() {\n      this.visibleLayers = featureLayersGroup.getLayers().getArray().filter(layer => \n        layer.getVisible() && (this.selectedLayers.length === 0 || this.selectedLayers.includes(layer.get('name')))\n      );\n    },\n    updateSelectedOption: function() {\n      this.selectedOption = this.visibleLayers.length > 0 ? this.visibleLayers[0].get('name') : '';\n    },\n    changeSelect: function(value) {\n      this.currentFeatureIndex = 0;\n      this.filteredFeatures = this.featuresDict[value] || [];\n    },\n\n    showNext: function() {\n      if (this.currentFeatureIndex < this.filteredFeatures.length - 1) {\n        this.currentFeatureIndex++;\n      }\n    },\n\n    showPrevious: function() {\n      if (this.currentFeatureIndex > 0) {\n        this.currentFeatureIndex--;\n      }\n    },\n\n    handleFeatureInfo: function(evt) {\n      emitCustomEvent('showLoading', {});\n      this.resetFeatureInfo();\n    \n      const viewResolution = view.getResolution();\n      let allLayersProcessed = 0;\n      const totalVisibleLayers = this.visibleLayers.length;\n    \n      this.visibleLayers.forEach(layer => this.processLayer(layer, evt.coordinate, viewResolution, () => {\n        allLayersProcessed++;\n        if (allLayersProcessed === totalVisibleLayers) {\n          this.updateAfterProcessing(evt); // Pass evt here\n        }\n      }));\n    },\n    resetFeatureInfo: function() {\n      this.featuresDict = {};\n      this.currentFeatureIndex = 0;\n    },\n    processLayer: function(layer, coordinate, resolution, callback) {\n      if (!layer.getVisible()) return;\n\n      const url = layer.getSource().getFeatureInfoUrl(coordinate, resolution, 'EPSG:3857', \n                                                      { 'INFO_FORMAT': 'application/json', 'FEATURE_COUNT': 200 });\n\n      if (url) {\n        fetch(url)\n          .then(response => response.json())\n          .then(data => {\n            if (Object.keys(data.features).length > 0) {\n              this.processFeatureData(layer, data);\n            }\n            callback();\n          })\n          .catch(error => {\n            console.error('Error:', error);\n            emitCustomEvent('hideLoading', {});\n          });\n      }\n    },\n    processFeatureData: function(layer, data) {\n      const visibleAttributes = layer.get('dataset')['attribute_set']\n                                    .filter(item => item.visible)\n                                    .map(item => item.attribute);\n\n      this.featuresDict[layer.get('name')] = data.features.map(feature => ({\n        ...feature,\n        properties: this.filterFeatureProperties(feature.properties, visibleAttributes)\n      }));\n    },\n    filterFeatureProperties: function(properties, visibleAttributes) {\n      return Object.keys(properties)\n        .filter(key => visibleAttributes.includes(key))\n        .reduce((obj, key) => {\n          obj[key] = properties[key];\n          return obj;\n        }, {});\n    },\n    updateAfterProcessing: function(evt) { // Accept evt as a parameter\n      const firstLayerName = Object.keys(this.featuresDict)[0];\n      if (firstLayerName) {\n        this.filteredFeatures = this.featuresDict[firstLayerName];\n        this.selectedOption = firstLayerName;\n      }\n      emitCustomEvent('hideLoading', {});\n    \n      if (this.isFeaturesDictNotEmpty()) {\n        this.showOffCanvas = true;\n        addClickIndicator(evt); // Use evt here\n      } else {\n        console.log(\"The dictionary is empty.\");\n      }\n    },\n    isFeaturesDictNotEmpty: function() {\n      return Object.keys(this.featuresDict).length > 0;\n    },\n  });\n\n  const domElementsToCreate = [\n    [createFeatureInfoOffCanvasMarkup, '#featureInfoOffcanvas'],\n  ]\n  renderMarkupAndSetPluginReady(domElementsToCreate)\n\n    // Catch the custom event and execute a function to update the legend\n    document.addEventListener('mapLayerHaveChanged', function (event) {\n      console.debug('Custom event \"mapLayerHaveChanged\" caught.');\n      Alpine.store('featureInfoStore').init();\n    });\n\n    // Catch the custom event and execute a function to update the legend\n    document.addEventListener('mapLayerSelected', function (event) {\n      console.debug('Custom event \"mapLayerSelected\" caught.');\n      console.log(event.detail.layer)\n      Alpine.store('featureInfoStore').selectedLayers = event.detail.layer;\n      Alpine.store('featureInfoStore').init();\n    });\n\n    Alpine.nextTick(() => {\n      map.on('singleclick', Alpine.store('featureInfoStore').handleFeatureInfo.bind(Alpine.store('featureInfoStore')));\n    });\n\n}\n\n\nexport { initialize };\n"],"names":["getVectorContext","event","canvasPixelRatio","frameState","transform","multiplyTransform","squaredTolerance","getSquaredTolerance","userTransform","CanvasImmediateRenderer","duration","addClickIndicator","evt","flash_times","coordinate","geom","Point","feature","Feature","Style","CircleStyle","Fill","Stroke","source","flash","flash_counter","start","flashGeom","animate","elapsed","unByKey","listenerKey","vectorContext","elapsedRatio","radius","easeOut","opacity","style","map","basemapLayers","layer","vector","createFeatureInfoOffCanvasMarkup","featureInfoOffcanvas","initialize","Alpine","featureLayersGroup","value","emitCustomEvent","viewResolution","view","allLayersProcessed","totalVisibleLayers","resolution","callback","url","response","data","error","visibleAttributes","item","properties","key","obj","firstLayerName","renderMarkupAndSetPluginReady"],"mappings":"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","x_google_ignoreList":[0]}