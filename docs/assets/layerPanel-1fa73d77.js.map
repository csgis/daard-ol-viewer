{"version":3,"file":"layerPanel-1fa73d77.js","sources":["../../components/core/layerPanel/layerPanel.js"],"sourcesContent":["import './layerPanel.css';\n\nimport { emitCustomEvent, waitForElementAndExecute } from '../helper.js';\nimport { featureLayersGroup, map, view } from '../mapSetup/mapSetup.js';\n\nimport Alpine from 'alpinejs';\nimport Polygon from 'ol/geom/Polygon.js';\nimport feather from 'feather-icons';\nimport proj4 from 'proj4';\nimport { renderMarkupAndSetPluginReady } from '../../core/helper.js'\n\nfunction isValid4326Coordinates(coordinates) {\n  if (!Array.isArray(coordinates)) return false;\n\n  for (const coord of coordinates) {\n    if (!Array.isArray(coord) || coord.length !== 2) return false;\n    const [longitude, latitude] = coord;\n    if (\n      typeof latitude !== 'number' || isNaN(latitude) || latitude < -90 || latitude > 90 ||\n      typeof longitude !== 'number' || isNaN(longitude) || longitude < -180 || longitude > 180\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst transformExtent = (extent, sourceSRID) => {\n  const targetProjection = 'EPSG:3857';\n  return extent.map(subArray => {\n    const coord = proj4(sourceSRID, targetProjection, subArray);\n    console.log(coord)\n    return [coord[0], coord[1]];\n  });\n}\n\nconst createOffCanvasMarkup = () => {\n  let layerPanelBodyMarkup = `\n\n    <div class=\"overflow-auto\" id=\"layerPanelEditBody\" x-show=\"$store.layerPanelContainer.sectionActive == 'layer-edit'\">\n\n    <div class=\"offcanvas-body p-3\">\n        <template x-for=\"(layer, index) in $store.layerPanel.ol_feature_layers\" :key=\"index\">\n          <div class=\"row p-0 border-top py-2\" :class=\"{ 'bg-warning': $store.layerPanel.layerCheckbox.includes(layer.get('name')) }\">\n              <div class=\"col-1 form-check form-switch pe-0\">\n              <input \n                x-tooltip.placement.right=\"'Show/Hide Layer ' + layer.getVisible()\"\n                class=\"form-check-input\" \n                type=\"checkbox\" \n                :id=\"'layerCheckbox' + layer.get('name')\" \n                x-bind:checked=\"layer.getVisible()\" \n                @click=\"$store.layerPanel.toggleLayerVisibility(index)\">\n              </div>\n              <div class=\"col-5 form-check p-0\" x-tooltip.placement.top=\"'Click to Select Layer'\">\n                <input \n                  class=\"form-check-input d-none p-0\"\n                  type=\"checkbox\" \n                  :id=\"'layerselectCheckbox' + layer.get('name')\" \n                  :checked=\"$store.layerPanel.layerCheckbox.includes(layer.get('name'))\"\n                  @change=\"$store.layerPanel.handleCheckboxChange(layer.get('name'), $event.target.checked)\">              \n                  <label \n                    class=\"form-check-label p-0 layer-label\"\n                    x-text=\"layer.get('name')\" \n                    :for=\"'layerselectCheckbox' + layer.get('name')\"\n                  ></label>\n              </div>\n              <div class=\"form-range-container col-3 position-relative p-0\">\n              <input type=\"range\" class=\"form-range p-0\"\n                min=\"0\" \n                max=\"1\" \n                step=\"0.01\" \n                x-init=\"layer.opacity = layer.opacity || 1\" \n                x-model=\"layer.opacity\" \n                x-tooltip.placement.top=\"'Change opacity'\"\n                x-on:input=\"$store.layerPanel.changeLayerOpacity(index)\" \n                :disabled=\"!layer.getVisible()\">\n              </div>\n              <div class=\"col p-0 text-right ps-3\">\n                  <span \n                  x-tooltip.placement.top=\"'Layer Info'\"\n                  class=\"d-inline\"\n                  :class=\"{'disabled opacity-5' : (layer.get('type') !== 'geonode')}\"\n                  @click=\"$store.layerPanel.openAbout(index)\"\n                  ><i data-feather=\"info\" class=\"size-20\"></i></span>\n\n                  <span \n                  x-tooltip.placement.top=\"'Zoom to layer'\"\n                  class=\"d-inline\"\n                  :class=\"{'disabled opacity-5' : (layer.get('type') !== 'geonode')}\"\n                  @click=\"$store.layerPanel.zoomToLayerExtent(index)\"\n                  ><i data-feather=\"zoom-in\" class=\"size-20\"></i></span>\n\n                <span \n                  style=\"cursor:pointer\"\n                  x-show=\"$store.layerPanel.showFilter\"\n                  x-tooltip.placement.left=\"'Show filter'\"\n                  :class=\"{\n                    'disabled opacity-5': (layer.get('type') !== 'geonode' && layer.get('type') !== 'WMS'),\n                    'text-danger': $store.layerPanel.activeFilters.includes(layer.get('name'))\n                  }\"\n                  @click=\"$store.layerPanel.openFilter(index)\"\n                  ><i data-feather=\"filter\" class=\"size-20\"></i></span>\n              </div>\n\n            </div>\n        </template>\n    </div>\n  </div>`;\n\n  var layerPanelContainerNavBody = document.getElementById('layerPanelContainerBody');\n  layerPanelContainerNavBody.insertAdjacentHTML('beforeend', layerPanelBodyMarkup);\n\n  // waitForElementAndExecute('layerPanelContainerBody')\n  // .then(() => {\n  //   var layerPanelContainerNavBody = document.getElementById('layerPanelContainerBody');\n  //   layerPanelContainerNavBody.insertAdjacentHTML('beforeend', layerPanelBodyMarkup);\n  //   console.log('- layerPanelBodyMarkup added')\n\n  // })\n  // .catch((error) => {\n  //   console.error(error.message);\n  // });\n}\n\nconst createButtonMarkup = () => {\n    let toggleLayerContainerBtn = `\n        <button \n          id=\"layerPanelNavButton\"\n          type=\"button\" \n          x-tooltip.placement.right=\"'Map Layers'\"\n          class=\"btn btn-inactive btn-square-md rounded-0 m-0 border-0 shadow-none text-dark d-block\"\n          :class=\"{'bg-light' : $store.layerPanelContainer.sectionActive == 'layer-edit',\n          ['order-' + $store.layerPanel.buttonDomOrder]: true}\"\n          @click=\"$store.layerPanelContainer.setSectionActive('layer-edit')\">          \n            <i data-feather=\"layers\" class=\"size-16\"></i>\n\n        </button>\n\n    `;\n    \n\n    var layerPanelCOntainerNavBody = document.getElementById('layerPanelContainerNavBar');\n    layerPanelCOntainerNavBody.insertAdjacentHTML('beforeend', toggleLayerContainerBtn);\n    \n    // waitForElementAndExecute('layerPanelContainerNavBar')\n    // .then(() => {\n    //   var layerPanelCOntainerNavBody = document.getElementById('layerPanelContainerNavBar');\n    //   layerPanelCOntainerNavBody.insertAdjacentHTML('beforeend', toggleLayerContainerBtn);\n    //   console.log('- toggleLayerContainerBtn added')\n    // })\n    // .catch((error) => {\n    //   console.error(error.message);\n    // });\n\n\n\n}\n\n\n\nconst initialize = async (buttonDomOrder) => {\n\n  const pluginStatus = Alpine.store('pluginStatus');\n  const showFilter = pluginStatus.registeredPluginNames.includes('filterLayer') || pluginStatus.registeredPluginNames.includes('geonodeCustomLayerFilter');\n\n  Alpine.store('layerPanel', {\n    componentIsActive: false,\n    buttonDomOrder: buttonDomOrder,\n    layerCheckbox: [],\n    activeFilters: [],\n    showFilter: showFilter,\n    ol_feature_layers: featureLayersGroup.getLayers().getArray(),\n    handleCheckboxChange: function(layerName, isChecked) {\n      if (isChecked) {\n        if (!this.layerCheckbox.includes(layerName)) {\n          this.layerCheckbox.push(layerName);\n        }\n      } else {\n        this.layerCheckbox = this.layerCheckbox.filter(name => name !== layerName);\n      }\n      console.debug(`Checkbox for ${layerName} is now ${isChecked ? 'checked' : 'unchecked'}`);\n      console.debug(this.layerCheckbox);\n      emitCustomEvent('mapLayerSelected', {'layer': this.layerCheckbox})\n    },\n    toggleLayerVisibility: function (index) {\n      const layer = this.ol_feature_layers[index];  \n      layer.visible = !layer.getVisible();\n      layer.setVisible(layer.visible);\n      \n      // Emit event when layer visibility changed\n      emitCustomEvent('mapLayerHaveChanged', {})\n    },\n    changeLayerOpacity: function(index) {\n      const layer = this.ol_feature_layers[index];\n      const layerToChangeOpacity = featureLayersGroup.getLayers().getArray()[index];\n      // Ensure opacity is a number between 0 and 1\n      layer.opacity = Math.max(0, Math.min(1, layer.opacity));\n      layerToChangeOpacity.setOpacity(layer.opacity);\n    },\n    zoomToLayerExtent: function(index) {\n      const layer = this.ol_feature_layers[index];\n      // Todo: check if we can/should use \"extent\" key from api instead\n      const extent = layer.get('dataset').ll_bbox_polygon.coordinates.flat()\n\n      if (isValid4326Coordinates(extent)) {\n        try {\n          const transformedExtent = transformExtent(extent, 'EPSG:4326')\n          const polygon = new Polygon([transformedExtent]);\n      \n          view.fit(polygon.getExtent(), {\n            padding: [100, 100, 100, 100],\n          });\n        } catch (error) {\n          console.error(`Error: ${error.message}`);\n        }\n      } else {\n        console.error('Invalid EPSG:4326 coordinates');\n      }\n    },\n    openAbout: function(index){\n      const layer = this.ol_feature_layers[index];\n      const source = layer.getSource();\n      source.mapName = layer.get('name');\n      source.dataset = layer.get('dataset');\n      emitCustomEvent('aboutPushed', {\"instance\": source})\n    },\n    openFilter: function(index){\n      const layer = this.ol_feature_layers[index];\n      const source = layer.getSource();\n      source.mapName = layer.get('name');\n      source.dataset = layer.get('dataset');\n      emitCustomEvent('filterPushed', {\"instance\": source})\n    },\n    isFilterActive: function(layername){\n      console.log(\"checking for\")\n      console.log(layername)\n      activeFilters = this.activeFilters;\n      return activeFilters.includes(layername)\n    }\n  });\n\n  const domElementsToCreate = [\n    [createOffCanvasMarkup, '#layerPanelEditBody'],\n    [createButtonMarkup, '#layerPanelNavButton'],\n  ]\n  renderMarkupAndSetPluginReady(domElementsToCreate)\n\n  Alpine.effect(() => {\n    console.log(Alpine.store('layerPanel').componentIsActive)\n  });\n\n\n\n};\n\nexport { initialize };\n"],"names":["isValid4326Coordinates","coordinates","coord","longitude","latitude","transformExtent","extent","sourceSRID","targetProjection","subArray","proj4","createOffCanvasMarkup","layerPanelBodyMarkup","layerPanelContainerNavBody","createButtonMarkup","toggleLayerContainerBtn","layerPanelCOntainerNavBody","initialize","buttonDomOrder","pluginStatus","Alpine","showFilter","featureLayersGroup","layerName","isChecked","name","emitCustomEvent","index","layer","layerToChangeOpacity","transformedExtent","polygon","Polygon","view","error","source","layername","renderMarkupAndSetPluginReady"],"mappings":"iJAWA,SAASA,EAAuBC,EAAa,CAC3C,GAAI,CAAC,MAAM,QAAQA,CAAW,EAAG,MAAO,GAExC,UAAWC,KAASD,EAAa,CAC/B,GAAI,CAAC,MAAM,QAAQC,CAAK,GAAKA,EAAM,SAAW,EAAG,MAAO,GACxD,KAAM,CAACC,EAAWC,CAAQ,EAAIF,EAC9B,GACE,OAAOE,GAAa,UAAY,MAAMA,CAAQ,GAAKA,EAAW,KAAOA,EAAW,IAChF,OAAOD,GAAc,UAAY,MAAMA,CAAS,GAAKA,EAAY,MAAQA,EAAY,IAErF,MAAO,EAEV,CACD,MAAO,EACT,CAEA,MAAME,EAAkB,CAACC,EAAQC,IAAe,CAC9C,MAAMC,EAAmB,YACzB,OAAOF,EAAO,IAAIG,GAAY,CAC5B,MAAMP,EAAQQ,EAAMH,EAAYC,EAAkBC,CAAQ,EAC1D,eAAQ,IAAIP,CAAK,EACV,CAACA,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,CAC9B,CAAG,CACH,EAEMS,EAAwB,IAAM,CAClC,IAAIC,EAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAwE3B,IAAIC,EAA6B,SAAS,eAAe,yBAAyB,EAClFA,EAA2B,mBAAmB,YAAaD,CAAoB,CAYjF,EAEME,EAAqB,IAAM,CAC7B,IAAIC,EAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgB9B,IAAIC,EAA6B,SAAS,eAAe,2BAA2B,EACpFA,EAA2B,mBAAmB,YAAaD,CAAuB,CActF,EAIME,EAAa,MAAOC,GAAmB,CAE3C,MAAMC,EAAeC,EAAO,MAAM,cAAc,EAC1CC,EAAaF,EAAa,sBAAsB,SAAS,aAAa,GAAKA,EAAa,sBAAsB,SAAS,0BAA0B,EAEvJC,EAAO,MAAM,aAAc,CACzB,kBAAmB,GACnB,eAAgBF,EAChB,cAAe,CAAE,EACjB,cAAe,CAAE,EACjB,WAAYG,EACZ,kBAAmBC,EAAmB,UAAW,EAAC,SAAU,EAC5D,qBAAsB,SAASC,EAAWC,EAAW,CAC/CA,EACG,KAAK,cAAc,SAASD,CAAS,GACxC,KAAK,cAAc,KAAKA,CAAS,EAGnC,KAAK,cAAgB,KAAK,cAAc,OAAOE,GAAQA,IAASF,CAAS,EAE3E,QAAQ,MAAM,gBAAgBA,CAAS,WAAWC,EAAY,UAAY,WAAW,EAAE,EACvF,QAAQ,MAAM,KAAK,aAAa,EAChCE,EAAgB,mBAAoB,CAAC,MAAS,KAAK,aAAa,CAAC,CAClE,EACD,sBAAuB,SAAUC,EAAO,CACtC,MAAMC,EAAQ,KAAK,kBAAkBD,CAAK,EAC1CC,EAAM,QAAU,CAACA,EAAM,WAAU,EACjCA,EAAM,WAAWA,EAAM,OAAO,EAG9BF,EAAgB,sBAAuB,EAAE,CAC1C,EACD,mBAAoB,SAASC,EAAO,CAClC,MAAMC,EAAQ,KAAK,kBAAkBD,CAAK,EACpCE,EAAuBP,EAAmB,UAAW,EAAC,SAAQ,EAAGK,CAAK,EAE5EC,EAAM,QAAU,KAAK,IAAI,EAAG,KAAK,IAAI,EAAGA,EAAM,OAAO,CAAC,EACtDC,EAAqB,WAAWD,EAAM,OAAO,CAC9C,EACD,kBAAmB,SAASD,EAAO,CAGjC,MAAMrB,EAFQ,KAAK,kBAAkBqB,CAAK,EAErB,IAAI,SAAS,EAAE,gBAAgB,YAAY,KAAM,EAEtE,GAAI3B,EAAuBM,CAAM,EAC/B,GAAI,CACF,MAAMwB,EAAoBzB,EAAgBC,EAAQ,WAAW,EACvDyB,EAAU,IAAIC,EAAQ,CAACF,CAAiB,CAAC,EAE/CG,EAAK,IAAIF,EAAQ,YAAa,CAC5B,QAAS,CAAC,IAAK,IAAK,IAAK,GAAG,CACxC,CAAW,CACF,OAAQG,EAAO,CACd,QAAQ,MAAM,UAAUA,EAAM,OAAO,EAAE,CACxC,MAED,QAAQ,MAAM,+BAA+B,CAEhD,EACD,UAAW,SAASP,EAAM,CACxB,MAAMC,EAAQ,KAAK,kBAAkBD,CAAK,EACpCQ,EAASP,EAAM,YACrBO,EAAO,QAAUP,EAAM,IAAI,MAAM,EACjCO,EAAO,QAAUP,EAAM,IAAI,SAAS,EACpCF,EAAgB,cAAe,CAAC,SAAYS,CAAM,CAAC,CACpD,EACD,WAAY,SAASR,EAAM,CACzB,MAAMC,EAAQ,KAAK,kBAAkBD,CAAK,EACpCQ,EAASP,EAAM,YACrBO,EAAO,QAAUP,EAAM,IAAI,MAAM,EACjCO,EAAO,QAAUP,EAAM,IAAI,SAAS,EACpCF,EAAgB,eAAgB,CAAC,SAAYS,CAAM,CAAC,CACrD,EACD,eAAgB,SAASC,EAAU,CACjC,eAAQ,IAAI,cAAc,EAC1B,QAAQ,IAAIA,CAAS,EACrB,cAAgB,KAAK,cACd,cAAc,SAASA,CAAS,CACxC,CACL,CAAG,EAMDC,EAJ4B,CAC1B,CAAC1B,EAAuB,qBAAqB,EAC7C,CAACG,EAAoB,sBAAsB,CAC5C,CACgD,EAEjDM,EAAO,OAAO,IAAM,CAClB,QAAQ,IAAIA,EAAO,MAAM,YAAY,EAAE,iBAAiB,CAC5D,CAAG,CAIH"}