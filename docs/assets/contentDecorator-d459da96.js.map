{"version":3,"file":"contentDecorator-d459da96.js","sources":["../../components/core/contentDecorator/decorators/appendEuroToNumber.js","../../components/core/contentDecorator/decorators/createLinkForUrl.js","../../components/core/contentDecorator/decorators/decodeUrl.js","../../components/core/contentDecorator/decorators/formatImageTag.js","../../components/core/contentDecorator/decorators/replaceBullet.js","../../components/core/contentDecorator/contentDecorator.js"],"sourcesContent":["const appendEuroToNumber = (value) => {\n    return typeof value === 'number' ? `${value} €` : value;\n};\n\nexport default appendEuroToNumber;\n","const createLinkForUrl = (value) => {\n    const urlPattern = /^(http|https):\\/\\/[^ \"]+$/;\n    return urlPattern.test(value) ? `<a href=\"${value}\" x-tooltip.placement.top=\"'Link opens in new window'\" target=\"_blank\" class=\"link-secondary\">${value}</a>` : value;\n};\n\nexport default createLinkForUrl;\n","const decodeUrl = (value) => {\n    try {\n        // Check if value is a string and URL-encoded\n        if (typeof value === 'string' && decodeURIComponent(value) !== value) {\n            return decodeURIComponent(value);\n        }\n        return value;\n    } catch (error) {\n        // In case of an error (e.g., value is not URL-encoded), return the original value\n        return value;\n    }\n};\n\nexport default decodeUrl;\n","const formatImageTag = (value) => {\n    const imgPattern = /\\.(jpeg|jpg|gif|png)$/;\n    return imgPattern.test(value) ? `<img src=\"${value}\" alt=\"Image\" style=\"max-height: 100px; max-width: 100px;\" />` : value;\n};\n\nexport default formatImageTag;\n","const createLinkForUrl = (value) => {\n    return value.replaceAll('●', '<br>')\n};\n\nexport default createLinkForUrl;\n","import appendEuroToNumber from './decorators/appendEuroToNumber';\nimport createLinkForUrl from './decorators/createLinkForUrl';\nimport decodeUrl from './decorators/decodeUrl.js'\nimport formatImageTag from './decorators/formatImageTag';\nimport replaceBullet from './decorators/replaceBullet';\n\nconst decorators = {\n    appendEuroToNumber,\n    createLinkForUrl,\n    formatImageTag,\n    decodeUrl,\n    replaceBullet\n};\n\nconst decorateValue = (value, usedDecorators = []) => {\n    Object.entries(decorators).forEach(([decoratorName, decoratorFunction]) => {\n        if (usedDecorators.includes(decoratorName)) {\n            value = decoratorFunction(value);\n        }\n    });\n    return value;\n};\n\nexport { decorateValue };\n"],"names":["appendEuroToNumber","value","createLinkForUrl","decodeUrl","formatImageTag","decorators","replaceBullet","decorateValue","usedDecorators","decoratorName","decoratorFunction"],"mappings":"AAAA,MAAMA,EAAsBC,GACjB,OAAOA,GAAU,SAAW,GAAGA,CAAK,KAAOA,ECDhDC,EAAoBD,GACH,4BACD,KAAKA,CAAK,EAAI,YAAYA,CAAK,iGAAiGA,CAAK,OAASA,ECF9JE,EAAaF,GAAU,CACzB,GAAI,CAEA,OAAI,OAAOA,GAAU,UAAY,mBAAmBA,CAAK,IAAMA,EACpD,mBAAmBA,CAAK,EAE5BA,CACV,MAAe,CAEZ,OAAOA,CACV,CACL,ECXMG,EAAkBH,GACD,wBACD,KAAKA,CAAK,EAAI,aAAaA,CAAK,gEAAkEA,ECFlHC,EAAoBD,GACfA,EAAM,WAAW,IAAK,MAAM,ECKjCI,EAAa,CACf,mBAAAL,EACJ,iBAAIE,EACA,eAAAE,EACA,UAAAD,EACJ,cAAIG,CACJ,EAEMC,EAAgB,CAACN,EAAOO,EAAiB,MAC3C,OAAO,QAAQH,CAAU,EAAE,QAAQ,CAAC,CAACI,EAAeC,CAAiB,IAAM,CACnEF,EAAe,SAASC,CAAa,IACrCR,EAAQS,EAAkBT,CAAK,EAE3C,CAAK,EACMA"}